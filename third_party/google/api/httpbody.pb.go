// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.23.0
// source: httpbody.proto

package httpbody

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message that represents an arbitrary HTTP body. It should only be used for
// payload formats that can't be represented as JSON, such as raw binary or
// an HTML page.
//
// This message can be used both in streaming and non-streaming API methods in
// the request as well as the response.
//
// It can be used as a top-level request field, which is convenient if one
// wants to extract parameters from either the URL or HTTP template into the
// request fields and also want access to the raw HTTP body.
//
// Example:
//
//	message GetResourceRequest {
//	  // A unique request id.
//	  string request_id = 1;
//
//	  // The raw HTTP body is bound to this field.
//	  google.api.HttpBody http_body = 2;
//	}
//
//	service ResourceService {
//	  rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);
//	  rpc UpdateResource(google.api.HttpBody) returns
//	  (google.protobuf.Empty);
//	}
//
// Example with streaming methods:
//
//	service CaldavService {
//	  rpc GetCalendar(stream google.api.HttpBody)
//	    returns (stream google.api.HttpBody);
//	  rpc UpdateCalendar(stream google.api.HttpBody)
//	    returns (stream google.api.HttpBody);
//	}
//
// Use of this type only changes how the request and response bodies are
// handled, all other features will continue to work unchanged.
type HttpBody struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The HTTP Content-Type header value specifying the content type of the body.
	ContentType string `protobuf:"bytes,1,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// The HTTP request/response body as raw binary.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// Application specific response metadata. Must be set in the first response
	// for streaming APIs.
	Extensions    []*anypb.Any `protobuf:"bytes,3,rep,name=extensions,proto3" json:"extensions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpBody) Reset() {
	*x = HttpBody{}
	mi := &file_httpbody_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpBody) ProtoMessage() {}

func (x *HttpBody) ProtoReflect() protoreflect.Message {
	mi := &file_httpbody_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpBody.ProtoReflect.Descriptor instead.
func (*HttpBody) Descriptor() ([]byte, []int) {
	return file_httpbody_proto_rawDescGZIP(), []int{0}
}

func (x *HttpBody) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *HttpBody) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *HttpBody) GetExtensions() []*anypb.Any {
	if x != nil {
		return x.Extensions
	}
	return nil
}

var File_httpbody_proto protoreflect.FileDescriptor

const file_httpbody_proto_rawDesc = "" +
	"\n" +
	"\x0ehttpbody.proto\x12\n" +
	"google.api\x1a\x19google/protobuf/any.proto\"w\n" +
	"\bHttpBody\x12!\n" +
	"\fcontent_type\x18\x01 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x124\n" +
	"\n" +
	"extensions\x18\x03 \x03(\v2\x14.google.protobuf.AnyR\n" +
	"extensionsBh\n" +
	"\x0ecom.google.apiB\rHttpBodyProtoP\x01Z;google.golang.org/genproto/googleapis/api/httpbody;httpbody\xf8\x01\x01\xa2\x02\x04GAPIb\x06proto3"

var (
	file_httpbody_proto_rawDescOnce sync.Once
	file_httpbody_proto_rawDescData []byte
)

func file_httpbody_proto_rawDescGZIP() []byte {
	file_httpbody_proto_rawDescOnce.Do(func() {
		file_httpbody_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_httpbody_proto_rawDesc), len(file_httpbody_proto_rawDesc)))
	})
	return file_httpbody_proto_rawDescData
}

var file_httpbody_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_httpbody_proto_goTypes = []any{
	(*HttpBody)(nil),  // 0: google.api.HttpBody
	(*anypb.Any)(nil), // 1: google.protobuf.Any
}
var file_httpbody_proto_depIdxs = []int32{
	1, // 0: google.api.HttpBody.extensions:type_name -> google.protobuf.Any
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_httpbody_proto_init() }
func file_httpbody_proto_init() {
	if File_httpbody_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_httpbody_proto_rawDesc), len(file_httpbody_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_httpbody_proto_goTypes,
		DependencyIndexes: file_httpbody_proto_depIdxs,
		MessageInfos:      file_httpbody_proto_msgTypes,
	}.Build()
	File_httpbody_proto = out.File
	file_httpbody_proto_goTypes = nil
	file_httpbody_proto_depIdxs = nil
}
