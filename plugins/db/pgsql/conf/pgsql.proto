syntax = "proto3";

package lynx.protobuf.plugin.db;

option go_package = "github.com/go-lynx/lynx/plugins/db/pgsql/conf;conf";

import "google/protobuf/duration.proto";

// Defines a message type for PgSQL configuration.
// 定义一个用于 PgSQL 数据库配置的消息类型。
message pgsql {
  // The driver name for the PgSQL database.
  // PgSQL 数据库的驱动名称。
  string driver = 1;
  // The data source name (DSN) for the PgSQL database.
  // PgSQL 数据库的数据源名称（DSN），用于连接数据库。
  string source = 2;
  // The minimum number of connections to maintain in the connection pool.
  // 连接池中需要维持的最小连接数。
  int32 min_conn = 3;
  // The maximum number of connections to maintain in the connection pool.
  // 连接池中需要维持的最大连接数。
  int32 max_conn = 4;
  // The maximum lifetime for a connection in the connection pool.
  // 连接池中连接的最大生命时间，超过该时间的连接可能会被关闭。
  google.protobuf.Duration max_life_time = 5;
  // The maximum idle time for a connection in the connection pool.
  // 连接池中连接的最大空闲时间，超过该时间的连接可能会被关闭。
  google.protobuf.Duration max_idle_time = 6;
  // Prometheus monitoring configuration.
  // Prometheus 监控配置。
  PrometheusConfig prometheus = 7;
}

// Prometheus monitoring configuration.
// Prometheus 监控配置。
message PrometheusConfig {
  // Whether to enable Prometheus metrics export.
  // 是否启用 Prometheus 指标导出。
  bool enabled = 1;
  // The HTTP endpoint path for metrics exposure.
  // 指标暴露的 HTTP 端点路径。
  string metrics_path = 2;
  // The port for metrics HTTP server.
  // 指标 HTTP 服务器的端口。
  int32 metrics_port = 3;
  // The namespace for Prometheus metrics.
  // Prometheus 指标的命名空间。
  string namespace = 4;
  // The subsystem for Prometheus metrics.
  // Prometheus 指标的子系统。
  string subsystem = 5;
  // Additional labels for metrics.
  // 指标的额外标签。
  map<string, string> labels = 6;
}
