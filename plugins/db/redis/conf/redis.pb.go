// Defines the syntax version for the Protocol Buffers file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.23.0
// source: redis.proto

// Specifies the package name for the generated code.

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines a message type for Redis configuration.
type Redis struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The network type (e.g., "tcp", "udp").
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// The address of the Redis server.
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// The password for the Redis server.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// The database number to use.
	Db int32 `protobuf:"varint,4,opt,name=db,proto3" json:"db,omitempty"`
	// The minimum number of idle connections to maintain.
	MinIdleConns int32 `protobuf:"varint,5,opt,name=min_idle_conns,json=minIdleConns,proto3" json:"min_idle_conns,omitempty"`
	// The maximum number of idle connections to maintain.
	MaxIdleConns int32 `protobuf:"varint,6,opt,name=max_idle_conns,json=maxIdleConns,proto3" json:"max_idle_conns,omitempty"`
	// The maximum number of active connections to allow.
	MaxActiveConns int32 `protobuf:"varint,7,opt,name=max_active_conns,json=maxActiveConns,proto3" json:"max_active_conns,omitempty"`
	// The maximum idle time for a connection.
	ConnMaxIdleTime *durationpb.Duration `protobuf:"bytes,8,opt,name=conn_max_idle_time,json=connMaxIdleTime,proto3" json:"conn_max_idle_time,omitempty"`
	// The timeout for establishing a connection.
	DialTimeout *durationpb.Duration `protobuf:"bytes,9,opt,name=dial_timeout,json=dialTimeout,proto3" json:"dial_timeout,omitempty"`
	// The timeout for reading data from a connection.
	ReadTimeout *durationpb.Duration `protobuf:"bytes,10,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	// The timeout for writing data to a connection.
	WriteTimeout  *durationpb.Duration `protobuf:"bytes,11,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Redis) Reset() {
	*x = Redis{}
	mi := &file_redis_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Redis) ProtoMessage() {}

func (x *Redis) ProtoReflect() protoreflect.Message {
	mi := &file_redis_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Redis.ProtoReflect.Descriptor instead.
func (*Redis) Descriptor() ([]byte, []int) {
	return file_redis_proto_rawDescGZIP(), []int{0}
}

func (x *Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Redis) GetMinIdleConns() int32 {
	if x != nil {
		return x.MinIdleConns
	}
	return 0
}

func (x *Redis) GetMaxIdleConns() int32 {
	if x != nil {
		return x.MaxIdleConns
	}
	return 0
}

func (x *Redis) GetMaxActiveConns() int32 {
	if x != nil {
		return x.MaxActiveConns
	}
	return 0
}

func (x *Redis) GetConnMaxIdleTime() *durationpb.Duration {
	if x != nil {
		return x.ConnMaxIdleTime
	}
	return nil
}

func (x *Redis) GetDialTimeout() *durationpb.Duration {
	if x != nil {
		return x.DialTimeout
	}
	return nil
}

func (x *Redis) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *Redis) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

var File_redis_proto protoreflect.FileDescriptor

const file_redis_proto_rawDesc = "" +
	"\n" +
	"\vredis.proto\x12\x1alynx.protobuf.plugin.redis\x1a\x1egoogle/protobuf/duration.proto\"\xdb\x03\n" +
	"\x05redis\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x0e\n" +
	"\x02db\x18\x04 \x01(\x05R\x02db\x12$\n" +
	"\x0emin_idle_conns\x18\x05 \x01(\x05R\fminIdleConns\x12$\n" +
	"\x0emax_idle_conns\x18\x06 \x01(\x05R\fmaxIdleConns\x12(\n" +
	"\x10max_active_conns\x18\a \x01(\x05R\x0emaxActiveConns\x12F\n" +
	"\x12conn_max_idle_time\x18\b \x01(\v2\x19.google.protobuf.DurationR\x0fconnMaxIdleTime\x12<\n" +
	"\fdial_timeout\x18\t \x01(\v2\x19.google.protobuf.DurationR\vdialTimeout\x12<\n" +
	"\fread_timeout\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\vreadTimeout\x12>\n" +
	"\rwrite_timeout\x18\v \x01(\v2\x19.google.protobuf.DurationR\fwriteTimeoutB2Z0github.com/go-lynx/plugins/db/redis/v2/conf;confb\x06proto3"

var (
	file_redis_proto_rawDescOnce sync.Once
	file_redis_proto_rawDescData []byte
)

func file_redis_proto_rawDescGZIP() []byte {
	file_redis_proto_rawDescOnce.Do(func() {
		file_redis_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_redis_proto_rawDesc), len(file_redis_proto_rawDesc)))
	})
	return file_redis_proto_rawDescData
}

var file_redis_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_redis_proto_goTypes = []any{
	(*Redis)(nil),               // 0: lynx.protobuf.plugin.redis.redis
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
}
var file_redis_proto_depIdxs = []int32{
	1, // 0: lynx.protobuf.plugin.redis.redis.conn_max_idle_time:type_name -> google.protobuf.Duration
	1, // 1: lynx.protobuf.plugin.redis.redis.dial_timeout:type_name -> google.protobuf.Duration
	1, // 2: lynx.protobuf.plugin.redis.redis.read_timeout:type_name -> google.protobuf.Duration
	1, // 3: lynx.protobuf.plugin.redis.redis.write_timeout:type_name -> google.protobuf.Duration
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_redis_proto_init() }
func file_redis_proto_init() {
	if File_redis_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_redis_proto_rawDesc), len(file_redis_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_redis_proto_goTypes,
		DependencyIndexes: file_redis_proto_depIdxs,
		MessageInfos:      file_redis_proto_msgTypes,
	}.Build()
	File_redis_proto = out.File
	file_redis_proto_goTypes = nil
	file_redis_proto_depIdxs = nil
}
