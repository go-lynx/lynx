// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: plugins/service/grpc/conf/client.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The grpc_client message defines the configuration information for the gRPC client plugin.
type GrpcClient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Default timeout for gRPC client requests
	DefaultTimeout *durationpb.Duration `protobuf:"bytes,1,opt,name=default_timeout,json=defaultTimeout,proto3" json:"default_timeout,omitempty"`
	// Default keep-alive interval for gRPC connections
	DefaultKeepAlive *durationpb.Duration `protobuf:"bytes,2,opt,name=default_keep_alive,json=defaultKeepAlive,proto3" json:"default_keep_alive,omitempty"`
	// Maximum number of retries for failed requests
	MaxRetries int32 `protobuf:"varint,3,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	// Backoff duration between retries
	RetryBackoff *durationpb.Duration `protobuf:"bytes,4,opt,name=retry_backoff,json=retryBackoff,proto3" json:"retry_backoff,omitempty"`
	// Maximum number of connections per service
	MaxConnections int32 `protobuf:"varint,5,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	// Enable TLS for gRPC client connections
	TlsEnable bool `protobuf:"varint,6,opt,name=tls_enable,json=tlsEnable,proto3" json:"tls_enable,omitempty"`
	// TLS authentication type
	TlsAuthType int32 `protobuf:"varint,7,opt,name=tls_auth_type,json=tlsAuthType,proto3" json:"tls_auth_type,omitempty"`
	// Enable connection pooling
	ConnectionPooling bool `protobuf:"varint,8,opt,name=connection_pooling,json=connectionPooling,proto3" json:"connection_pooling,omitempty"`
	// Connection pool size
	PoolSize int32 `protobuf:"varint,9,opt,name=pool_size,json=poolSize,proto3" json:"pool_size,omitempty"`
	// Connection idle timeout
	IdleTimeout *durationpb.Duration `protobuf:"bytes,10,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
	// Enable health checking for connections
	HealthCheckEnabled bool `protobuf:"varint,11,opt,name=health_check_enabled,json=healthCheckEnabled,proto3" json:"health_check_enabled,omitempty"`
	// Health check interval
	HealthCheckInterval *durationpb.Duration `protobuf:"bytes,12,opt,name=health_check_interval,json=healthCheckInterval,proto3" json:"health_check_interval,omitempty"`
	// Enable metrics collection
	MetricsEnabled bool `protobuf:"varint,13,opt,name=metrics_enabled,json=metricsEnabled,proto3" json:"metrics_enabled,omitempty"`
	// Enable distributed tracing
	TracingEnabled bool `protobuf:"varint,14,opt,name=tracing_enabled,json=tracingEnabled,proto3" json:"tracing_enabled,omitempty"`
	// Enable request logging
	LoggingEnabled bool `protobuf:"varint,15,opt,name=logging_enabled,json=loggingEnabled,proto3" json:"logging_enabled,omitempty"`
	// Maximum message size in bytes
	MaxMessageSize int32 `protobuf:"varint,16,opt,name=max_message_size,json=maxMessageSize,proto3" json:"max_message_size,omitempty"`
	// Enable compression
	CompressionEnabled bool `protobuf:"varint,17,opt,name=compression_enabled,json=compressionEnabled,proto3" json:"compression_enabled,omitempty"`
	// Compression type (gzip, deflate, etc.)
	CompressionType string `protobuf:"bytes,18,opt,name=compression_type,json=compressionType,proto3" json:"compression_type,omitempty"`
	// Service subscription configurations for service discovery
	SubscribeServices []*SubscribeService `protobuf:"bytes,19,rep,name=subscribe_services,json=subscribeServices,proto3" json:"subscribe_services,omitempty"`
	// Legacy static service configurations (deprecated, use subscribe_services instead)
	//
	// Deprecated: Marked as deprecated in plugins/service/grpc/conf/client.proto.
	Services      []*StaticService `protobuf:"bytes,20,rep,name=services,proto3" json:"services,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrpcClient) Reset() {
	*x = GrpcClient{}
	mi := &file_plugins_service_grpc_conf_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcClient) ProtoMessage() {}

func (x *GrpcClient) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_service_grpc_conf_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcClient.ProtoReflect.Descriptor instead.
func (*GrpcClient) Descriptor() ([]byte, []int) {
	return file_plugins_service_grpc_conf_client_proto_rawDescGZIP(), []int{0}
}

func (x *GrpcClient) GetDefaultTimeout() *durationpb.Duration {
	if x != nil {
		return x.DefaultTimeout
	}
	return nil
}

func (x *GrpcClient) GetDefaultKeepAlive() *durationpb.Duration {
	if x != nil {
		return x.DefaultKeepAlive
	}
	return nil
}

func (x *GrpcClient) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *GrpcClient) GetRetryBackoff() *durationpb.Duration {
	if x != nil {
		return x.RetryBackoff
	}
	return nil
}

func (x *GrpcClient) GetMaxConnections() int32 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *GrpcClient) GetTlsEnable() bool {
	if x != nil {
		return x.TlsEnable
	}
	return false
}

func (x *GrpcClient) GetTlsAuthType() int32 {
	if x != nil {
		return x.TlsAuthType
	}
	return 0
}

func (x *GrpcClient) GetConnectionPooling() bool {
	if x != nil {
		return x.ConnectionPooling
	}
	return false
}

func (x *GrpcClient) GetPoolSize() int32 {
	if x != nil {
		return x.PoolSize
	}
	return 0
}

func (x *GrpcClient) GetIdleTimeout() *durationpb.Duration {
	if x != nil {
		return x.IdleTimeout
	}
	return nil
}

func (x *GrpcClient) GetHealthCheckEnabled() bool {
	if x != nil {
		return x.HealthCheckEnabled
	}
	return false
}

func (x *GrpcClient) GetHealthCheckInterval() *durationpb.Duration {
	if x != nil {
		return x.HealthCheckInterval
	}
	return nil
}

func (x *GrpcClient) GetMetricsEnabled() bool {
	if x != nil {
		return x.MetricsEnabled
	}
	return false
}

func (x *GrpcClient) GetTracingEnabled() bool {
	if x != nil {
		return x.TracingEnabled
	}
	return false
}

func (x *GrpcClient) GetLoggingEnabled() bool {
	if x != nil {
		return x.LoggingEnabled
	}
	return false
}

func (x *GrpcClient) GetMaxMessageSize() int32 {
	if x != nil {
		return x.MaxMessageSize
	}
	return 0
}

func (x *GrpcClient) GetCompressionEnabled() bool {
	if x != nil {
		return x.CompressionEnabled
	}
	return false
}

func (x *GrpcClient) GetCompressionType() string {
	if x != nil {
		return x.CompressionType
	}
	return ""
}

func (x *GrpcClient) GetSubscribeServices() []*SubscribeService {
	if x != nil {
		return x.SubscribeServices
	}
	return nil
}

// Deprecated: Marked as deprecated in plugins/service/grpc/conf/client.proto.
func (x *GrpcClient) GetServices() []*StaticService {
	if x != nil {
		return x.Services
	}
	return nil
}

// Configuration for subscribing to services via service discovery
type SubscribeService struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Service name for service discovery
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional: Static endpoint override (only used when service discovery is unavailable)
	// When using service discovery (like Polaris), this field should be empty
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Service-specific timeout override
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Enable TLS for this specific service
	TlsEnable bool `protobuf:"varint,4,opt,name=tls_enable,json=tlsEnable,proto3" json:"tls_enable,omitempty"`
	// TLS authentication type for this service
	TlsAuthType int32 `protobuf:"varint,5,opt,name=tls_auth_type,json=tlsAuthType,proto3" json:"tls_auth_type,omitempty"`
	// Maximum retries for this service
	MaxRetries int32 `protobuf:"varint,6,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	// Whether this service is required at startup
	Required bool `protobuf:"varint,7,opt,name=required,proto3" json:"required,omitempty"`
	// Service-specific metadata
	Metadata map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Load balancing strategy (round_robin, random, weighted_round_robin, etc.)
	LoadBalancer string `protobuf:"bytes,9,opt,name=load_balancer,json=loadBalancer,proto3" json:"load_balancer,omitempty"`
	// Circuit breaker configuration
	CircuitBreakerEnabled bool `protobuf:"varint,10,opt,name=circuit_breaker_enabled,json=circuitBreakerEnabled,proto3" json:"circuit_breaker_enabled,omitempty"`
	// Circuit breaker failure threshold
	CircuitBreakerThreshold int32 `protobuf:"varint,11,opt,name=circuit_breaker_threshold,json=circuitBreakerThreshold,proto3" json:"circuit_breaker_threshold,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SubscribeService) Reset() {
	*x = SubscribeService{}
	mi := &file_plugins_service_grpc_conf_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeService) ProtoMessage() {}

func (x *SubscribeService) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_service_grpc_conf_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeService.ProtoReflect.Descriptor instead.
func (*SubscribeService) Descriptor() ([]byte, []int) {
	return file_plugins_service_grpc_conf_client_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubscribeService) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *SubscribeService) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *SubscribeService) GetTlsEnable() bool {
	if x != nil {
		return x.TlsEnable
	}
	return false
}

func (x *SubscribeService) GetTlsAuthType() int32 {
	if x != nil {
		return x.TlsAuthType
	}
	return 0
}

func (x *SubscribeService) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

func (x *SubscribeService) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *SubscribeService) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SubscribeService) GetLoadBalancer() string {
	if x != nil {
		return x.LoadBalancer
	}
	return ""
}

func (x *SubscribeService) GetCircuitBreakerEnabled() bool {
	if x != nil {
		return x.CircuitBreakerEnabled
	}
	return false
}

func (x *SubscribeService) GetCircuitBreakerThreshold() int32 {
	if x != nil {
		return x.CircuitBreakerThreshold
	}
	return 0
}

// Legacy static service configuration (deprecated)
//
// Deprecated: Marked as deprecated in plugins/service/grpc/conf/client.proto.
type StaticService struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Service name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Static endpoint
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// Service-specific timeout
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Enable TLS for this service
	TlsEnable bool `protobuf:"varint,4,opt,name=tls_enable,json=tlsEnable,proto3" json:"tls_enable,omitempty"`
	// TLS authentication type
	TlsAuthType int32 `protobuf:"varint,5,opt,name=tls_auth_type,json=tlsAuthType,proto3" json:"tls_auth_type,omitempty"`
	// Maximum retries for this service
	MaxRetries    int32 `protobuf:"varint,6,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StaticService) Reset() {
	*x = StaticService{}
	mi := &file_plugins_service_grpc_conf_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StaticService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StaticService) ProtoMessage() {}

func (x *StaticService) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_service_grpc_conf_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StaticService.ProtoReflect.Descriptor instead.
func (*StaticService) Descriptor() ([]byte, []int) {
	return file_plugins_service_grpc_conf_client_proto_rawDescGZIP(), []int{2}
}

func (x *StaticService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StaticService) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *StaticService) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *StaticService) GetTlsEnable() bool {
	if x != nil {
		return x.TlsEnable
	}
	return false
}

func (x *StaticService) GetTlsAuthType() int32 {
	if x != nil {
		return x.TlsAuthType
	}
	return 0
}

func (x *StaticService) GetMaxRetries() int32 {
	if x != nil {
		return x.MaxRetries
	}
	return 0
}

var File_plugins_service_grpc_conf_client_proto protoreflect.FileDescriptor

const file_plugins_service_grpc_conf_client_proto_rawDesc = "" +
	"\n" +
	"&plugins/service/grpc/conf/client.proto\x12 lynx.protobuf.plugin.grpc.client\x1a\x1egoogle/protobuf/duration.proto\"\xa9\b\n" +
	"\vgrpc_client\x12B\n" +
	"\x0fdefault_timeout\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x0edefaultTimeout\x12G\n" +
	"\x12default_keep_alive\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x10defaultKeepAlive\x12\x1f\n" +
	"\vmax_retries\x18\x03 \x01(\x05R\n" +
	"maxRetries\x12>\n" +
	"\rretry_backoff\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\fretryBackoff\x12'\n" +
	"\x0fmax_connections\x18\x05 \x01(\x05R\x0emaxConnections\x12\x1d\n" +
	"\n" +
	"tls_enable\x18\x06 \x01(\bR\ttlsEnable\x12\"\n" +
	"\rtls_auth_type\x18\a \x01(\x05R\vtlsAuthType\x12-\n" +
	"\x12connection_pooling\x18\b \x01(\bR\x11connectionPooling\x12\x1b\n" +
	"\tpool_size\x18\t \x01(\x05R\bpoolSize\x12<\n" +
	"\fidle_timeout\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\vidleTimeout\x120\n" +
	"\x14health_check_enabled\x18\v \x01(\bR\x12healthCheckEnabled\x12M\n" +
	"\x15health_check_interval\x18\f \x01(\v2\x19.google.protobuf.DurationR\x13healthCheckInterval\x12'\n" +
	"\x0fmetrics_enabled\x18\r \x01(\bR\x0emetricsEnabled\x12'\n" +
	"\x0ftracing_enabled\x18\x0e \x01(\bR\x0etracingEnabled\x12'\n" +
	"\x0flogging_enabled\x18\x0f \x01(\bR\x0eloggingEnabled\x12(\n" +
	"\x10max_message_size\x18\x10 \x01(\x05R\x0emaxMessageSize\x12/\n" +
	"\x13compression_enabled\x18\x11 \x01(\bR\x12compressionEnabled\x12)\n" +
	"\x10compression_type\x18\x12 \x01(\tR\x0fcompressionType\x12b\n" +
	"\x12subscribe_services\x18\x13 \x03(\v23.lynx.protobuf.plugin.grpc.client.subscribe_serviceR\x11subscribeServices\x12P\n" +
	"\bservices\x18\x14 \x03(\v20.lynx.protobuf.plugin.grpc.client.static_serviceB\x02\x18\x01R\bservices\"\xad\x04\n" +
	"\x11subscribe_service\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bendpoint\x18\x02 \x01(\tR\bendpoint\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12\x1d\n" +
	"\n" +
	"tls_enable\x18\x04 \x01(\bR\ttlsEnable\x12\"\n" +
	"\rtls_auth_type\x18\x05 \x01(\x05R\vtlsAuthType\x12\x1f\n" +
	"\vmax_retries\x18\x06 \x01(\x05R\n" +
	"maxRetries\x12\x1a\n" +
	"\brequired\x18\a \x01(\bR\brequired\x12]\n" +
	"\bmetadata\x18\b \x03(\v2A.lynx.protobuf.plugin.grpc.client.subscribe_service.MetadataEntryR\bmetadata\x12#\n" +
	"\rload_balancer\x18\t \x01(\tR\floadBalancer\x126\n" +
	"\x17circuit_breaker_enabled\x18\n" +
	" \x01(\bR\x15circuitBreakerEnabled\x12:\n" +
	"\x19circuit_breaker_threshold\x18\v \x01(\x05R\x17circuitBreakerThreshold\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdd\x01\n" +
	"\x0estatic_service\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bendpoint\x18\x02 \x01(\tR\bendpoint\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12\x1d\n" +
	"\n" +
	"tls_enable\x18\x04 \x01(\bR\ttlsEnable\x12\"\n" +
	"\rtls_auth_type\x18\x05 \x01(\x05R\vtlsAuthType\x12\x1f\n" +
	"\vmax_retries\x18\x06 \x01(\x05R\n" +
	"maxRetries:\x02\x18\x01B8Z6github.com/go-lynx/lynx/plugins/service/grpc/conf;confb\x06proto3"

var (
	file_plugins_service_grpc_conf_client_proto_rawDescOnce sync.Once
	file_plugins_service_grpc_conf_client_proto_rawDescData []byte
)

func file_plugins_service_grpc_conf_client_proto_rawDescGZIP() []byte {
	file_plugins_service_grpc_conf_client_proto_rawDescOnce.Do(func() {
		file_plugins_service_grpc_conf_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugins_service_grpc_conf_client_proto_rawDesc), len(file_plugins_service_grpc_conf_client_proto_rawDesc)))
	})
	return file_plugins_service_grpc_conf_client_proto_rawDescData
}

var file_plugins_service_grpc_conf_client_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_plugins_service_grpc_conf_client_proto_goTypes = []any{
	(*GrpcClient)(nil),          // 0: lynx.protobuf.plugin.grpc.client.grpc_client
	(*SubscribeService)(nil),    // 1: lynx.protobuf.plugin.grpc.client.subscribe_service
	(*StaticService)(nil),       // 2: lynx.protobuf.plugin.grpc.client.static_service
	nil,                         // 3: lynx.protobuf.plugin.grpc.client.subscribe_service.MetadataEntry
	(*durationpb.Duration)(nil), // 4: google.protobuf.Duration
}
var file_plugins_service_grpc_conf_client_proto_depIdxs = []int32{
	4,  // 0: lynx.protobuf.plugin.grpc.client.grpc_client.default_timeout:type_name -> google.protobuf.Duration
	4,  // 1: lynx.protobuf.plugin.grpc.client.grpc_client.default_keep_alive:type_name -> google.protobuf.Duration
	4,  // 2: lynx.protobuf.plugin.grpc.client.grpc_client.retry_backoff:type_name -> google.protobuf.Duration
	4,  // 3: lynx.protobuf.plugin.grpc.client.grpc_client.idle_timeout:type_name -> google.protobuf.Duration
	4,  // 4: lynx.protobuf.plugin.grpc.client.grpc_client.health_check_interval:type_name -> google.protobuf.Duration
	1,  // 5: lynx.protobuf.plugin.grpc.client.grpc_client.subscribe_services:type_name -> lynx.protobuf.plugin.grpc.client.subscribe_service
	2,  // 6: lynx.protobuf.plugin.grpc.client.grpc_client.services:type_name -> lynx.protobuf.plugin.grpc.client.static_service
	4,  // 7: lynx.protobuf.plugin.grpc.client.subscribe_service.timeout:type_name -> google.protobuf.Duration
	3,  // 8: lynx.protobuf.plugin.grpc.client.subscribe_service.metadata:type_name -> lynx.protobuf.plugin.grpc.client.subscribe_service.MetadataEntry
	4,  // 9: lynx.protobuf.plugin.grpc.client.static_service.timeout:type_name -> google.protobuf.Duration
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_plugins_service_grpc_conf_client_proto_init() }
func file_plugins_service_grpc_conf_client_proto_init() {
	if File_plugins_service_grpc_conf_client_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugins_service_grpc_conf_client_proto_rawDesc), len(file_plugins_service_grpc_conf_client_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugins_service_grpc_conf_client_proto_goTypes,
		DependencyIndexes: file_plugins_service_grpc_conf_client_proto_depIdxs,
		MessageInfos:      file_plugins_service_grpc_conf_client_proto_msgTypes,
	}.Build()
	File_plugins_service_grpc_conf_client_proto = out.File
	file_plugins_service_grpc_conf_client_proto_goTypes = nil
	file_plugins_service_grpc_conf_client_proto_depIdxs = nil
}
