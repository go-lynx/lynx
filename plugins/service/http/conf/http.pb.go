// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: http.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Http defines the configuration for the HTTP server plugin
type Http struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network specifies the network type (e.g., "tcp", "unix")
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// Addr specifies the address to listen on (e.g., ":8080", "localhost:8080")
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// Tls indicates whether TLS/HTTPS is enabled
	TlsEnable bool `protobuf:"varint,3,opt,name=tls_enable,json=tlsEnable,proto3" json:"tls_enable,omitempty"`
	// TlsAuthType specifies the TLS authentication type:
	// 0: No client auth
	// 1: Request client cert
	// 2: Require client cert
	// 3: Verify client cert
	// 4: Verify client cert if given
	TlsAuthType int32 `protobuf:"varint,4,opt,name=tls_auth_type,json=tlsAuthType,proto3" json:"tls_auth_type,omitempty"`
	// Timeout specifies the maximum duration for handling HTTP requests
	Timeout *durationpb.Duration `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Monitoring configuration
	Monitoring *MonitoringConfig `protobuf:"bytes,6,opt,name=monitoring,proto3" json:"monitoring,omitempty"`
	// Security configuration
	Security *SecurityConfig `protobuf:"bytes,7,opt,name=security,proto3" json:"security,omitempty"`
	// Performance configuration
	Performance *PerformanceConfig `protobuf:"bytes,8,opt,name=performance,proto3" json:"performance,omitempty"`
	// Middleware configuration
	Middleware *MiddlewareConfig `protobuf:"bytes,9,opt,name=middleware,proto3" json:"middleware,omitempty"`
	// Graceful shutdown configuration
	GracefulShutdown *GracefulShutdownConfig `protobuf:"bytes,10,opt,name=graceful_shutdown,json=gracefulShutdown,proto3" json:"graceful_shutdown,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Http) Reset() {
	*x = Http{}
	mi := &file_http_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http) ProtoMessage() {}

func (x *Http) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Http.ProtoReflect.Descriptor instead.
func (*Http) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{0}
}

func (x *Http) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Http) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Http) GetTlsEnable() bool {
	if x != nil {
		return x.TlsEnable
	}
	return false
}

func (x *Http) GetTlsAuthType() int32 {
	if x != nil {
		return x.TlsAuthType
	}
	return 0
}

func (x *Http) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Http) GetMonitoring() *MonitoringConfig {
	if x != nil {
		return x.Monitoring
	}
	return nil
}

func (x *Http) GetSecurity() *SecurityConfig {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *Http) GetPerformance() *PerformanceConfig {
	if x != nil {
		return x.Performance
	}
	return nil
}

func (x *Http) GetMiddleware() *MiddlewareConfig {
	if x != nil {
		return x.Middleware
	}
	return nil
}

func (x *Http) GetGracefulShutdown() *GracefulShutdownConfig {
	if x != nil {
		return x.GracefulShutdown
	}
	return nil
}

// Monitoring configuration
type MonitoringConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to enable Prometheus metrics
	EnableMetrics bool `protobuf:"varint,1,opt,name=enable_metrics,json=enableMetrics,proto3" json:"enable_metrics,omitempty"`
	// Metrics endpoint path
	MetricsPath string `protobuf:"bytes,2,opt,name=metrics_path,json=metricsPath,proto3" json:"metrics_path,omitempty"`
	// Health check endpoint path
	HealthPath string `protobuf:"bytes,3,opt,name=health_path,json=healthPath,proto3" json:"health_path,omitempty"`
	// Whether to enable request logging
	EnableRequestLogging bool `protobuf:"varint,4,opt,name=enable_request_logging,json=enableRequestLogging,proto3" json:"enable_request_logging,omitempty"`
	// Whether to enable error logging
	EnableErrorLogging bool `protobuf:"varint,5,opt,name=enable_error_logging,json=enableErrorLogging,proto3" json:"enable_error_logging,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MonitoringConfig) Reset() {
	*x = MonitoringConfig{}
	mi := &file_http_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringConfig) ProtoMessage() {}

func (x *MonitoringConfig) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringConfig.ProtoReflect.Descriptor instead.
func (*MonitoringConfig) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{1}
}

func (x *MonitoringConfig) GetEnableMetrics() bool {
	if x != nil {
		return x.EnableMetrics
	}
	return false
}

func (x *MonitoringConfig) GetMetricsPath() string {
	if x != nil {
		return x.MetricsPath
	}
	return ""
}

func (x *MonitoringConfig) GetHealthPath() string {
	if x != nil {
		return x.HealthPath
	}
	return ""
}

func (x *MonitoringConfig) GetEnableRequestLogging() bool {
	if x != nil {
		return x.EnableRequestLogging
	}
	return false
}

func (x *MonitoringConfig) GetEnableErrorLogging() bool {
	if x != nil {
		return x.EnableErrorLogging
	}
	return false
}

// Security configuration
type SecurityConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CORS configuration
	Cors *CorsConfig `protobuf:"bytes,1,opt,name=cors,proto3" json:"cors,omitempty"`
	// Request size limit in bytes
	MaxRequestSize int64 `protobuf:"varint,2,opt,name=max_request_size,json=maxRequestSize,proto3" json:"max_request_size,omitempty"`
	// Rate limiting configuration
	RateLimit *RateLimitConfig `protobuf:"bytes,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
	// Security headers configuration
	SecurityHeaders *SecurityHeadersConfig `protobuf:"bytes,4,opt,name=security_headers,json=securityHeaders,proto3" json:"security_headers,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SecurityConfig) Reset() {
	*x = SecurityConfig{}
	mi := &file_http_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityConfig) ProtoMessage() {}

func (x *SecurityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityConfig.ProtoReflect.Descriptor instead.
func (*SecurityConfig) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{2}
}

func (x *SecurityConfig) GetCors() *CorsConfig {
	if x != nil {
		return x.Cors
	}
	return nil
}

func (x *SecurityConfig) GetMaxRequestSize() int64 {
	if x != nil {
		return x.MaxRequestSize
	}
	return 0
}

func (x *SecurityConfig) GetRateLimit() *RateLimitConfig {
	if x != nil {
		return x.RateLimit
	}
	return nil
}

func (x *SecurityConfig) GetSecurityHeaders() *SecurityHeadersConfig {
	if x != nil {
		return x.SecurityHeaders
	}
	return nil
}

// CORS configuration
type CorsConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to enable CORS
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Allowed origins
	AllowedOrigins []string `protobuf:"bytes,2,rep,name=allowed_origins,json=allowedOrigins,proto3" json:"allowed_origins,omitempty"`
	// Allowed methods
	AllowedMethods []string `protobuf:"bytes,3,rep,name=allowed_methods,json=allowedMethods,proto3" json:"allowed_methods,omitempty"`
	// Allowed headers
	AllowedHeaders []string `protobuf:"bytes,4,rep,name=allowed_headers,json=allowedHeaders,proto3" json:"allowed_headers,omitempty"`
	// Exposed headers
	ExposedHeaders []string `protobuf:"bytes,5,rep,name=exposed_headers,json=exposedHeaders,proto3" json:"exposed_headers,omitempty"`
	// Whether to allow credentials
	AllowCredentials bool `protobuf:"varint,6,opt,name=allow_credentials,json=allowCredentials,proto3" json:"allow_credentials,omitempty"`
	// Max age for preflight requests
	MaxAge        int32 `protobuf:"varint,7,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CorsConfig) Reset() {
	*x = CorsConfig{}
	mi := &file_http_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CorsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorsConfig) ProtoMessage() {}

func (x *CorsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorsConfig.ProtoReflect.Descriptor instead.
func (*CorsConfig) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{3}
}

func (x *CorsConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CorsConfig) GetAllowedOrigins() []string {
	if x != nil {
		return x.AllowedOrigins
	}
	return nil
}

func (x *CorsConfig) GetAllowedMethods() []string {
	if x != nil {
		return x.AllowedMethods
	}
	return nil
}

func (x *CorsConfig) GetAllowedHeaders() []string {
	if x != nil {
		return x.AllowedHeaders
	}
	return nil
}

func (x *CorsConfig) GetExposedHeaders() []string {
	if x != nil {
		return x.ExposedHeaders
	}
	return nil
}

func (x *CorsConfig) GetAllowCredentials() bool {
	if x != nil {
		return x.AllowCredentials
	}
	return false
}

func (x *CorsConfig) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

// Rate limiting configuration
type RateLimitConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to enable rate limiting
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Rate limit per second
	RatePerSecond int32 `protobuf:"varint,2,opt,name=rate_per_second,json=ratePerSecond,proto3" json:"rate_per_second,omitempty"`
	// Burst limit
	BurstLimit    int32 `protobuf:"varint,3,opt,name=burst_limit,json=burstLimit,proto3" json:"burst_limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimitConfig) Reset() {
	*x = RateLimitConfig{}
	mi := &file_http_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitConfig) ProtoMessage() {}

func (x *RateLimitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitConfig.ProtoReflect.Descriptor instead.
func (*RateLimitConfig) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{4}
}

func (x *RateLimitConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RateLimitConfig) GetRatePerSecond() int32 {
	if x != nil {
		return x.RatePerSecond
	}
	return 0
}

func (x *RateLimitConfig) GetBurstLimit() int32 {
	if x != nil {
		return x.BurstLimit
	}
	return 0
}

// Security headers configuration
type SecurityHeadersConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to enable security headers
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Content Security Policy
	ContentSecurityPolicy string `protobuf:"bytes,2,opt,name=content_security_policy,json=contentSecurityPolicy,proto3" json:"content_security_policy,omitempty"`
	// X-Frame-Options
	XFrameOptions string `protobuf:"bytes,3,opt,name=x_frame_options,json=xFrameOptions,proto3" json:"x_frame_options,omitempty"`
	// X-Content-Type-Options
	XContentTypeOptions string `protobuf:"bytes,4,opt,name=x_content_type_options,json=xContentTypeOptions,proto3" json:"x_content_type_options,omitempty"`
	// X-XSS-Protection
	XXssProtection string `protobuf:"bytes,5,opt,name=x_xss_protection,json=xXssProtection,proto3" json:"x_xss_protection,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SecurityHeadersConfig) Reset() {
	*x = SecurityHeadersConfig{}
	mi := &file_http_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityHeadersConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityHeadersConfig) ProtoMessage() {}

func (x *SecurityHeadersConfig) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityHeadersConfig.ProtoReflect.Descriptor instead.
func (*SecurityHeadersConfig) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{5}
}

func (x *SecurityHeadersConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SecurityHeadersConfig) GetContentSecurityPolicy() string {
	if x != nil {
		return x.ContentSecurityPolicy
	}
	return ""
}

func (x *SecurityHeadersConfig) GetXFrameOptions() string {
	if x != nil {
		return x.XFrameOptions
	}
	return ""
}

func (x *SecurityHeadersConfig) GetXContentTypeOptions() string {
	if x != nil {
		return x.XContentTypeOptions
	}
	return ""
}

func (x *SecurityHeadersConfig) GetXXssProtection() string {
	if x != nil {
		return x.XXssProtection
	}
	return ""
}

// Performance configuration
type PerformanceConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection pool size
	ConnectionPoolSize int32 `protobuf:"varint,1,opt,name=connection_pool_size,json=connectionPoolSize,proto3" json:"connection_pool_size,omitempty"`
	// Read buffer size
	ReadBufferSize int32 `protobuf:"varint,2,opt,name=read_buffer_size,json=readBufferSize,proto3" json:"read_buffer_size,omitempty"`
	// Write buffer size
	WriteBufferSize int32 `protobuf:"varint,3,opt,name=write_buffer_size,json=writeBufferSize,proto3" json:"write_buffer_size,omitempty"`
	// Idle timeout
	IdleTimeout *durationpb.Duration `protobuf:"bytes,4,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
	// Keep alive timeout
	KeepAliveTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=keep_alive_timeout,json=keepAliveTimeout,proto3" json:"keep_alive_timeout,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PerformanceConfig) Reset() {
	*x = PerformanceConfig{}
	mi := &file_http_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceConfig) ProtoMessage() {}

func (x *PerformanceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceConfig.ProtoReflect.Descriptor instead.
func (*PerformanceConfig) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{6}
}

func (x *PerformanceConfig) GetConnectionPoolSize() int32 {
	if x != nil {
		return x.ConnectionPoolSize
	}
	return 0
}

func (x *PerformanceConfig) GetReadBufferSize() int32 {
	if x != nil {
		return x.ReadBufferSize
	}
	return 0
}

func (x *PerformanceConfig) GetWriteBufferSize() int32 {
	if x != nil {
		return x.WriteBufferSize
	}
	return 0
}

func (x *PerformanceConfig) GetIdleTimeout() *durationpb.Duration {
	if x != nil {
		return x.IdleTimeout
	}
	return nil
}

func (x *PerformanceConfig) GetKeepAliveTimeout() *durationpb.Duration {
	if x != nil {
		return x.KeepAliveTimeout
	}
	return nil
}

// Middleware configuration
type MiddlewareConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to enable tracing middleware
	EnableTracing bool `protobuf:"varint,1,opt,name=enable_tracing,json=enableTracing,proto3" json:"enable_tracing,omitempty"`
	// Whether to enable logging middleware
	EnableLogging bool `protobuf:"varint,2,opt,name=enable_logging,json=enableLogging,proto3" json:"enable_logging,omitempty"`
	// Whether to enable recovery middleware
	EnableRecovery bool `protobuf:"varint,3,opt,name=enable_recovery,json=enableRecovery,proto3" json:"enable_recovery,omitempty"`
	// Whether to enable validation middleware
	EnableValidation bool `protobuf:"varint,4,opt,name=enable_validation,json=enableValidation,proto3" json:"enable_validation,omitempty"`
	// Custom middleware configuration
	CustomMiddleware []string `protobuf:"bytes,5,rep,name=custom_middleware,json=customMiddleware,proto3" json:"custom_middleware,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MiddlewareConfig) Reset() {
	*x = MiddlewareConfig{}
	mi := &file_http_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiddlewareConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddlewareConfig) ProtoMessage() {}

func (x *MiddlewareConfig) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddlewareConfig.ProtoReflect.Descriptor instead.
func (*MiddlewareConfig) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{7}
}

func (x *MiddlewareConfig) GetEnableTracing() bool {
	if x != nil {
		return x.EnableTracing
	}
	return false
}

func (x *MiddlewareConfig) GetEnableLogging() bool {
	if x != nil {
		return x.EnableLogging
	}
	return false
}

func (x *MiddlewareConfig) GetEnableRecovery() bool {
	if x != nil {
		return x.EnableRecovery
	}
	return false
}

func (x *MiddlewareConfig) GetEnableValidation() bool {
	if x != nil {
		return x.EnableValidation
	}
	return false
}

func (x *MiddlewareConfig) GetCustomMiddleware() []string {
	if x != nil {
		return x.CustomMiddleware
	}
	return nil
}

// Graceful shutdown configuration
type GracefulShutdownConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Shutdown timeout
	ShutdownTimeout *durationpb.Duration `protobuf:"bytes,1,opt,name=shutdown_timeout,json=shutdownTimeout,proto3" json:"shutdown_timeout,omitempty"`
	// Whether to wait for ongoing requests
	WaitForOngoingRequests bool `protobuf:"varint,2,opt,name=wait_for_ongoing_requests,json=waitForOngoingRequests,proto3" json:"wait_for_ongoing_requests,omitempty"`
	// Maximum wait time for ongoing requests
	MaxWaitTime   *durationpb.Duration `protobuf:"bytes,3,opt,name=max_wait_time,json=maxWaitTime,proto3" json:"max_wait_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GracefulShutdownConfig) Reset() {
	*x = GracefulShutdownConfig{}
	mi := &file_http_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GracefulShutdownConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GracefulShutdownConfig) ProtoMessage() {}

func (x *GracefulShutdownConfig) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GracefulShutdownConfig.ProtoReflect.Descriptor instead.
func (*GracefulShutdownConfig) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{8}
}

func (x *GracefulShutdownConfig) GetShutdownTimeout() *durationpb.Duration {
	if x != nil {
		return x.ShutdownTimeout
	}
	return nil
}

func (x *GracefulShutdownConfig) GetWaitForOngoingRequests() bool {
	if x != nil {
		return x.WaitForOngoingRequests
	}
	return false
}

func (x *GracefulShutdownConfig) GetMaxWaitTime() *durationpb.Duration {
	if x != nil {
		return x.MaxWaitTime
	}
	return nil
}

var File_http_proto protoreflect.FileDescriptor

const file_http_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"http.proto\x12\x19lynx.protobuf.plugin.http\x1a\x1egoogle/protobuf/duration.proto\"\xbd\x04\n" +
	"\x04http\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x1d\n" +
	"\n" +
	"tls_enable\x18\x03 \x01(\bR\ttlsEnable\x12\"\n" +
	"\rtls_auth_type\x18\x04 \x01(\x05R\vtlsAuthType\x123\n" +
	"\atimeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12K\n" +
	"\n" +
	"monitoring\x18\x06 \x01(\v2+.lynx.protobuf.plugin.http.MonitoringConfigR\n" +
	"monitoring\x12E\n" +
	"\bsecurity\x18\a \x01(\v2).lynx.protobuf.plugin.http.SecurityConfigR\bsecurity\x12N\n" +
	"\vperformance\x18\b \x01(\v2,.lynx.protobuf.plugin.http.PerformanceConfigR\vperformance\x12K\n" +
	"\n" +
	"middleware\x18\t \x01(\v2+.lynx.protobuf.plugin.http.MiddlewareConfigR\n" +
	"middleware\x12^\n" +
	"\x11graceful_shutdown\x18\n" +
	" \x01(\v21.lynx.protobuf.plugin.http.GracefulShutdownConfigR\x10gracefulShutdown\"\xe5\x01\n" +
	"\x10MonitoringConfig\x12%\n" +
	"\x0eenable_metrics\x18\x01 \x01(\bR\renableMetrics\x12!\n" +
	"\fmetrics_path\x18\x02 \x01(\tR\vmetricsPath\x12\x1f\n" +
	"\vhealth_path\x18\x03 \x01(\tR\n" +
	"healthPath\x124\n" +
	"\x16enable_request_logging\x18\x04 \x01(\bR\x14enableRequestLogging\x120\n" +
	"\x14enable_error_logging\x18\x05 \x01(\bR\x12enableErrorLogging\"\x9d\x02\n" +
	"\x0eSecurityConfig\x129\n" +
	"\x04cors\x18\x01 \x01(\v2%.lynx.protobuf.plugin.http.CorsConfigR\x04cors\x12(\n" +
	"\x10max_request_size\x18\x02 \x01(\x03R\x0emaxRequestSize\x12I\n" +
	"\n" +
	"rate_limit\x18\x03 \x01(\v2*.lynx.protobuf.plugin.http.RateLimitConfigR\trateLimit\x12[\n" +
	"\x10security_headers\x18\x04 \x01(\v20.lynx.protobuf.plugin.http.SecurityHeadersConfigR\x0fsecurityHeaders\"\x90\x02\n" +
	"\n" +
	"CorsConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12'\n" +
	"\x0fallowed_origins\x18\x02 \x03(\tR\x0eallowedOrigins\x12'\n" +
	"\x0fallowed_methods\x18\x03 \x03(\tR\x0eallowedMethods\x12'\n" +
	"\x0fallowed_headers\x18\x04 \x03(\tR\x0eallowedHeaders\x12'\n" +
	"\x0fexposed_headers\x18\x05 \x03(\tR\x0eexposedHeaders\x12+\n" +
	"\x11allow_credentials\x18\x06 \x01(\bR\x10allowCredentials\x12\x17\n" +
	"\amax_age\x18\a \x01(\x05R\x06maxAge\"t\n" +
	"\x0fRateLimitConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12&\n" +
	"\x0frate_per_second\x18\x02 \x01(\x05R\rratePerSecond\x12\x1f\n" +
	"\vburst_limit\x18\x03 \x01(\x05R\n" +
	"burstLimit\"\xf0\x01\n" +
	"\x15SecurityHeadersConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x126\n" +
	"\x17content_security_policy\x18\x02 \x01(\tR\x15contentSecurityPolicy\x12&\n" +
	"\x0fx_frame_options\x18\x03 \x01(\tR\rxFrameOptions\x123\n" +
	"\x16x_content_type_options\x18\x04 \x01(\tR\x13xContentTypeOptions\x12(\n" +
	"\x10x_xss_protection\x18\x05 \x01(\tR\x0exXssProtection\"\xa2\x02\n" +
	"\x11PerformanceConfig\x120\n" +
	"\x14connection_pool_size\x18\x01 \x01(\x05R\x12connectionPoolSize\x12(\n" +
	"\x10read_buffer_size\x18\x02 \x01(\x05R\x0ereadBufferSize\x12*\n" +
	"\x11write_buffer_size\x18\x03 \x01(\x05R\x0fwriteBufferSize\x12<\n" +
	"\fidle_timeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\vidleTimeout\x12G\n" +
	"\x12keep_alive_timeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\x10keepAliveTimeout\"\xe3\x01\n" +
	"\x10MiddlewareConfig\x12%\n" +
	"\x0eenable_tracing\x18\x01 \x01(\bR\renableTracing\x12%\n" +
	"\x0eenable_logging\x18\x02 \x01(\bR\renableLogging\x12'\n" +
	"\x0fenable_recovery\x18\x03 \x01(\bR\x0eenableRecovery\x12+\n" +
	"\x11enable_validation\x18\x04 \x01(\bR\x10enableValidation\x12+\n" +
	"\x11custom_middleware\x18\x05 \x03(\tR\x10customMiddleware\"\xd8\x01\n" +
	"\x16GracefulShutdownConfig\x12D\n" +
	"\x10shutdown_timeout\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x0fshutdownTimeout\x129\n" +
	"\x19wait_for_ongoing_requests\x18\x02 \x01(\bR\x16waitForOngoingRequests\x12=\n" +
	"\rmax_wait_time\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\vmaxWaitTimeB8Z6github.com/go-lynx/lynx/plugins/service/http/conf;confb\x06proto3"

var (
	file_http_proto_rawDescOnce sync.Once
	file_http_proto_rawDescData []byte
)

func file_http_proto_rawDescGZIP() []byte {
	file_http_proto_rawDescOnce.Do(func() {
		file_http_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_http_proto_rawDesc), len(file_http_proto_rawDesc)))
	})
	return file_http_proto_rawDescData
}

var file_http_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_http_proto_goTypes = []any{
	(*Http)(nil),                   // 0: lynx.protobuf.plugin.http.http
	(*MonitoringConfig)(nil),       // 1: lynx.protobuf.plugin.http.MonitoringConfig
	(*SecurityConfig)(nil),         // 2: lynx.protobuf.plugin.http.SecurityConfig
	(*CorsConfig)(nil),             // 3: lynx.protobuf.plugin.http.CorsConfig
	(*RateLimitConfig)(nil),        // 4: lynx.protobuf.plugin.http.RateLimitConfig
	(*SecurityHeadersConfig)(nil),  // 5: lynx.protobuf.plugin.http.SecurityHeadersConfig
	(*PerformanceConfig)(nil),      // 6: lynx.protobuf.plugin.http.PerformanceConfig
	(*MiddlewareConfig)(nil),       // 7: lynx.protobuf.plugin.http.MiddlewareConfig
	(*GracefulShutdownConfig)(nil), // 8: lynx.protobuf.plugin.http.GracefulShutdownConfig
	(*durationpb.Duration)(nil),    // 9: google.protobuf.Duration
}
var file_http_proto_depIdxs = []int32{
	9,  // 0: lynx.protobuf.plugin.http.http.timeout:type_name -> google.protobuf.Duration
	1,  // 1: lynx.protobuf.plugin.http.http.monitoring:type_name -> lynx.protobuf.plugin.http.MonitoringConfig
	2,  // 2: lynx.protobuf.plugin.http.http.security:type_name -> lynx.protobuf.plugin.http.SecurityConfig
	6,  // 3: lynx.protobuf.plugin.http.http.performance:type_name -> lynx.protobuf.plugin.http.PerformanceConfig
	7,  // 4: lynx.protobuf.plugin.http.http.middleware:type_name -> lynx.protobuf.plugin.http.MiddlewareConfig
	8,  // 5: lynx.protobuf.plugin.http.http.graceful_shutdown:type_name -> lynx.protobuf.plugin.http.GracefulShutdownConfig
	3,  // 6: lynx.protobuf.plugin.http.SecurityConfig.cors:type_name -> lynx.protobuf.plugin.http.CorsConfig
	4,  // 7: lynx.protobuf.plugin.http.SecurityConfig.rate_limit:type_name -> lynx.protobuf.plugin.http.RateLimitConfig
	5,  // 8: lynx.protobuf.plugin.http.SecurityConfig.security_headers:type_name -> lynx.protobuf.plugin.http.SecurityHeadersConfig
	9,  // 9: lynx.protobuf.plugin.http.PerformanceConfig.idle_timeout:type_name -> google.protobuf.Duration
	9,  // 10: lynx.protobuf.plugin.http.PerformanceConfig.keep_alive_timeout:type_name -> google.protobuf.Duration
	9,  // 11: lynx.protobuf.plugin.http.GracefulShutdownConfig.shutdown_timeout:type_name -> google.protobuf.Duration
	9,  // 12: lynx.protobuf.plugin.http.GracefulShutdownConfig.max_wait_time:type_name -> google.protobuf.Duration
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_http_proto_init() }
func file_http_proto_init() {
	if File_http_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_http_proto_rawDesc), len(file_http_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_http_proto_goTypes,
		DependencyIndexes: file_http_proto_depIdxs,
		MessageInfos:      file_http_proto_msgTypes,
	}.Build()
	File_http_proto = out.File
	file_http_proto_goTypes = nil
	file_http_proto_depIdxs = nil
}
