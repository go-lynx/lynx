// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: http.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Http defines the configuration for the HTTP server plugin
// Http 定义了 HTTP 服务器插件的配置信息。
type Http struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network specifies the network type (e.g., "tcp", "unix")
	// Network 指定网络类型（例如 "tcp"、"unix"）。
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// Addr specifies the address to listen on (e.g., ":8080", "localhost:8080")
	// Addr 指定 HTTP 服务器监听的地址（例如 ":8080"、"localhost:8080"）。
	Addr string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// Tls indicates whether TLS/HTTPS is enabled
	// Tls 指示是否启用 TLS/HTTPS 加密。
	Tls bool `protobuf:"varint,3,opt,name=tls,proto3" json:"tls,omitempty"`
	// TlsAuthType specifies the TLS authentication type:
	// 0: No client auth
	// 1: Request client cert
	// 2: Require client cert
	// 3: Verify client cert
	// 4: Verify client cert if given
	// TlsAuthType 指定 TLS 客户端认证类型，具体含义如下：
	// 0: 不进行客户端认证
	// 1: 请求客户端证书，但不强制要求
	// 2: 强制要求客户端提供证书
	// 3: 验证客户端证书
	// 4: 若客户端提供证书，则进行验证
	TlsAuthType int32 `protobuf:"varint,4,opt,name=tls_auth_type,json=tlsAuthType,proto3" json:"tls_auth_type,omitempty"`
	// Timeout specifies the maximum duration for handling HTTP requests
	// Timeout 指定处理 HTTP 请求的最大时长。
	Timeout       *durationpb.Duration `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Http) Reset() {
	*x = Http{}
	mi := &file_http_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Http) ProtoMessage() {}

func (x *Http) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Http.ProtoReflect.Descriptor instead.
func (*Http) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{0}
}

func (x *Http) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Http) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Http) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *Http) GetTlsAuthType() int32 {
	if x != nil {
		return x.TlsAuthType
	}
	return 0
}

func (x *Http) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

var File_http_proto protoreflect.FileDescriptor

const file_http_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"http.proto\x12\x19lynx.protobuf.plugin.http\x1a\x1egoogle/protobuf/duration.proto\"\x9f\x01\n" +
	"\x04http\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x10\n" +
	"\x03tls\x18\x03 \x01(\bR\x03tls\x12\"\n" +
	"\rtls_auth_type\x18\x04 \x01(\x05R\vtlsAuthType\x123\n" +
	"\atimeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\atimeoutB6Z4github.com/go-lynx/plugins/service/http/v2/conf;confb\x06proto3"

var (
	file_http_proto_rawDescOnce sync.Once
	file_http_proto_rawDescData []byte
)

func file_http_proto_rawDescGZIP() []byte {
	file_http_proto_rawDescOnce.Do(func() {
		file_http_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_http_proto_rawDesc), len(file_http_proto_rawDesc)))
	})
	return file_http_proto_rawDescData
}

var file_http_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_http_proto_goTypes = []any{
	(*Http)(nil),                // 0: lynx.protobuf.plugin.http.http
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
}
var file_http_proto_depIdxs = []int32{
	1, // 0: lynx.protobuf.plugin.http.http.timeout:type_name -> google.protobuf.Duration
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_http_proto_init() }
func file_http_proto_init() {
	if File_http_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_http_proto_rawDesc), len(file_http_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_http_proto_goTypes,
		DependencyIndexes: file_http_proto_depIdxs,
		MessageInfos:      file_http_proto_msgTypes,
	}.Build()
	File_http_proto = out.File
	file_http_proto_goTypes = nil
	file_http_proto_depIdxs = nil
}
