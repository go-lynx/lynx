syntax = "proto3";

package lynx.protobuf.plugin.http;

option go_package = "github.com/go-lynx/lynx/plugins/service/http/conf;conf";

import "google/protobuf/duration.proto";

// Http defines the configuration for the HTTP server plugin
message http {
  // Network specifies the network type (e.g., "tcp", "unix")
  string network = 1;

  // Addr specifies the address to listen on (e.g., ":8080", "localhost:8080")
  string addr = 2;

  // Tls indicates whether TLS/HTTPS is enabled
  bool tls_enable = 3;

  // TlsAuthType specifies the TLS authentication type:
  // 0: No client auth
  // 1: Request client cert
  // 2: Require client cert
  // 3: Verify client cert
  // 4: Verify client cert if given
  int32 tls_auth_type = 4;

  // Timeout specifies the maximum duration for handling HTTP requests
  google.protobuf.Duration timeout = 5;

  // Monitoring configuration
  MonitoringConfig monitoring = 6;

  // Security configuration
  SecurityConfig security = 7;

  // Performance configuration
  PerformanceConfig performance = 8;

  // Middleware configuration
  MiddlewareConfig middleware = 9;

  // Graceful shutdown configuration
  GracefulShutdownConfig graceful_shutdown = 10;
}

// Monitoring configuration
message MonitoringConfig {
  // Whether to enable Prometheus metrics
  bool enable_metrics = 1;

  // Metrics endpoint path
  string metrics_path = 2;

  // Health check endpoint path
  string health_path = 3;

  // Whether to enable request logging
  bool enable_request_logging = 4;

  // Whether to enable error logging
  bool enable_error_logging = 5;

  // Whether to enable detailed route metrics
  bool enable_route_metrics = 6;

  // Whether to enable connection metrics
  bool enable_connection_metrics = 7;

  // Whether to enable queue metrics
  bool enable_queue_metrics = 8;

  // Whether to enable error type metrics
  bool enable_error_type_metrics = 9;
}

// Security configuration
message SecurityConfig {
  // CORS configuration
  CorsConfig cors = 1;

  // Request size limit in bytes
  int64 max_request_size = 2;

  // Rate limiting configuration
  RateLimitConfig rate_limit = 3;

  // Security headers configuration
  SecurityHeadersConfig security_headers = 4;
}

// CORS configuration
message CorsConfig {
  // Whether to enable CORS
  bool enabled = 1;

  // Allowed origins
  repeated string allowed_origins = 2;

  // Allowed methods
  repeated string allowed_methods = 3;

  // Allowed headers
  repeated string allowed_headers = 4;

  // Exposed headers
  repeated string exposed_headers = 5;

  // Whether to allow credentials
  bool allow_credentials = 6;

  // Max age for preflight requests
  int32 max_age = 7;
}

// Rate limiting configuration
message RateLimitConfig {
  // Whether to enable rate limiting
  bool enabled = 1;

  // Rate limit per second
  int32 rate_per_second = 2;

  // Burst limit
  int32 burst_limit = 3;
}

// Security headers configuration
message SecurityHeadersConfig {
  // Whether to enable security headers
  bool enabled = 1;

  // Content Security Policy
  string content_security_policy = 2;

  // X-Frame-Options
  string x_frame_options = 3;

  // X-Content-Type-Options
  string x_content_type_options = 4;

  // X-XSS-Protection
  string x_xss_protection = 5;
}

// Performance configuration
message PerformanceConfig {
  // Maximum number of concurrent connections
  int32 max_connections = 1;

  // Maximum number of concurrent requests
  int32 max_concurrent_requests = 2;

  // Read buffer size in bytes
  int32 read_buffer_size = 3;

  // Write buffer size in bytes
  int32 write_buffer_size = 4;

  // Connection pool configuration
  ConnectionPoolConfig connection_pool = 5;

  // Read timeout
  google.protobuf.Duration read_timeout = 6;

  // Write timeout
  google.protobuf.Duration write_timeout = 7;

  // Idle timeout
  google.protobuf.Duration idle_timeout = 8;

  // Header read timeout
  google.protobuf.Duration read_header_timeout = 9;
}

// Connection pool configuration
message ConnectionPoolConfig {
  // Maximum number of idle connections
  int32 max_idle_conns = 1;

  // Maximum number of idle connections per host
  int32 max_idle_conns_per_host = 2;

  // Maximum number of connections per host
  int32 max_conns_per_host = 3;

   // Connection reuse duration
  google.protobuf.Duration keep_alive_duration = 4;
}

// Legacy performance settings (deprecated)
message LegacyPerformanceSettings {
  // Connection pool size
  int32 connection_pool_size = 1;

  // Read buffer size
  int32 read_buffer_size = 2;

  // Write buffer size
  int32 write_buffer_size = 3;

  // Idle timeout
  google.protobuf.Duration idle_timeout = 4;

  // Keep alive timeout
  google.protobuf.Duration keep_alive_timeout = 5;
}

// Middleware configuration
message MiddlewareConfig {
  // Whether to enable tracing middleware
  bool enable_tracing = 1;

  // Whether to enable logging middleware
  bool enable_logging = 2;

  // Whether to enable recovery middleware
  bool enable_recovery = 3;

  // Whether to enable validation middleware
  bool enable_validation = 4;

  // Whether to enable rate limiting middleware
  bool enable_rate_limit = 5;

  // Whether to enable metrics middleware
  bool enable_metrics = 6;

  // Custom middleware configuration
  map<string, string> custom_middleware = 7;
}

// Graceful shutdown configuration
message GracefulShutdownConfig {
  // Shutdown timeout
  google.protobuf.Duration shutdown_timeout = 1;

  // Whether to wait for ongoing requests
  bool wait_for_ongoing_requests = 2;

  // Maximum wait time for ongoing requests
  google.protobuf.Duration max_wait_time = 3;
}
