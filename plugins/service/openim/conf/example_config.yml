# OpenIM Service Configuration Example
# This file demonstrates the configuration options available for the OpenIM service plugin

lynx:
  openim:
    # Server configuration
    server:
      # Server address (e.g., "localhost:10002")
      addr: "localhost:10002"
      # API version
      api_version: "v3"
      # Platform ID
      platform_id: 1
      # Server name
      server_name: "OpenIM Server"
      # Log level (debug, info, warn, error)
      log_level: "info"
      # Log output path
      log_output_path: "./logs/openim.log"
      # Log rotation max size (MB)
      log_rotation_max_size: 100
      # Log rotation max age (days)
      log_rotation_max_age: 7
      # Log rotation max backups
      log_rotation_max_backups: 5
      # Log is stdout
      log_is_stdout: true
      # Log is json
      log_is_json: false
      # Log with stack
      log_with_stack: false

    # Client configuration
    client:
      # Client user ID
      user_id: "test_user"
      # Client token
      token: "your_jwt_token_here"
      # Client platform ID
      platform_id: 1
      # Client server address
      server_addr: "localhost:10002"
      # Client API version
      api_version: "v3"
      # Client timeout
      timeout: 30s
      # Client heartbeat interval
      heartbeat_interval: 30s

    # Message configuration (default values)
    message:
      # Message type (text, image, voice, video, file, etc.)
      type: "text"
      # Message content
      content: ""
      # Message sender
      sender: ""
      # Message receiver
      receiver: ""
      # Message group ID (for group messages)
      group_id: ""
      # Message sequence number
      sequence: 0
      # Message timestamp
      timestamp: 0
      # Message status
      status: "pending"

    # Security configuration
    security:
      # Enable TLS
      tls_enable: false
      # TLS certificate file
      tls_cert_file: "./certs/server.crt"
      # TLS key file
      tls_key_file: "./certs/server.key"
      # TLS CA file
      tls_ca_file: "./certs/ca.crt"
      # Enable authentication
      auth_enable: true
      # JWT secret
      jwt_secret: "your_jwt_secret_here"
      # JWT expire time
      jwt_expire: 24h

    # Storage configuration
    storage:
      # Storage type (redis, mysql, mongodb, etc.)
      type: "redis"
      # Storage address
      addr: "localhost:6379"
      # Storage username
      username: ""
      # Storage password
      password: ""
      # Storage database
      database: "0"
      # Storage pool size
      pool_size: 10
      # Storage timeout
      timeout: 5s

# Example configurations for different storage backends:

# Redis Storage Example
# storage:
#   type: "redis"
#   addr: "localhost:6379"
#   password: "redis_password"
#   database: "0"
#   pool_size: 20
#   timeout: 5s

# MySQL Storage Example
# storage:
#   type: "mysql"
#   addr: "localhost:3306"
#   username: "openim_user"
#   password: "mysql_password"
#   database: "openim_db"
#   pool_size: 10
#   timeout: 10s

# MongoDB Storage Example
# storage:
#   type: "mongodb"
#   addr: "localhost:27017"
#   username: "openim_user"
#   password: "mongo_password"
#   database: "openim_db"
#   pool_size: 10
#   timeout: 5s
