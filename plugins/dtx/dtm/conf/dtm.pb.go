// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: dtm.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The DTM message defines the configuration information for the DTM plugin.
type DTM struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// enabled indicates whether the DTM plugin is enabled.
	// Set to true to enable the plugin, set to false to disable the plugin.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// server_url represents the DTM server URL.
	// Example: http://localhost:36789/api/dtmsvr
	ServerUrl string `protobuf:"bytes,2,opt,name=server_url,json=serverUrl,proto3" json:"server_url,omitempty"`
	// grpc_server represents the DTM gRPC server address.
	// Example: localhost:36790
	GrpcServer string `protobuf:"bytes,3,opt,name=grpc_server,json=grpcServer,proto3" json:"grpc_server,omitempty"`
	// timeout represents the request timeout in seconds.
	Timeout int32 `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// retry_interval represents the retry interval in seconds.
	RetryInterval int32 `protobuf:"varint,5,opt,name=retry_interval,json=retryInterval,proto3" json:"retry_interval,omitempty"`
	// pass_through_headers represents the headers to pass through.
	PassThroughHeaders []string `protobuf:"bytes,6,rep,name=pass_through_headers,json=passThroughHeaders,proto3" json:"pass_through_headers,omitempty"`
	// transaction_timeout represents the global transaction timeout in seconds.
	TransactionTimeout int32 `protobuf:"varint,7,opt,name=transaction_timeout,json=transactionTimeout,proto3" json:"transaction_timeout,omitempty"`
	// branch_timeout represents the branch transaction timeout in seconds.
	BranchTimeout int32 `protobuf:"varint,8,opt,name=branch_timeout,json=branchTimeout,proto3" json:"branch_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DTM) Reset() {
	*x = DTM{}
	mi := &file_dtm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DTM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DTM) ProtoMessage() {}

func (x *DTM) ProtoReflect() protoreflect.Message {
	mi := &file_dtm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DTM.ProtoReflect.Descriptor instead.
func (*DTM) Descriptor() ([]byte, []int) {
	return file_dtm_proto_rawDescGZIP(), []int{0}
}

func (x *DTM) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *DTM) GetServerUrl() string {
	if x != nil {
		return x.ServerUrl
	}
	return ""
}

func (x *DTM) GetGrpcServer() string {
	if x != nil {
		return x.GrpcServer
	}
	return ""
}

func (x *DTM) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *DTM) GetRetryInterval() int32 {
	if x != nil {
		return x.RetryInterval
	}
	return 0
}

func (x *DTM) GetPassThroughHeaders() []string {
	if x != nil {
		return x.PassThroughHeaders
	}
	return nil
}

func (x *DTM) GetTransactionTimeout() int32 {
	if x != nil {
		return x.TransactionTimeout
	}
	return 0
}

func (x *DTM) GetBranchTimeout() int32 {
	if x != nil {
		return x.BranchTimeout
	}
	return 0
}

var File_dtm_proto protoreflect.FileDescriptor

const file_dtm_proto_rawDesc = "" +
	"\n" +
	"\tdtm.proto\x12\x18lynx.protobuf.plugin.dtm\"\xaa\x02\n" +
	"\x03DTM\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"server_url\x18\x02 \x01(\tR\tserverUrl\x12\x1f\n" +
	"\vgrpc_server\x18\x03 \x01(\tR\n" +
	"grpcServer\x12\x18\n" +
	"\atimeout\x18\x04 \x01(\x05R\atimeout\x12%\n" +
	"\x0eretry_interval\x18\x05 \x01(\x05R\rretryInterval\x120\n" +
	"\x14pass_through_headers\x18\x06 \x03(\tR\x12passThroughHeaders\x12/\n" +
	"\x13transaction_timeout\x18\a \x01(\x05R\x12transactionTimeout\x12%\n" +
	"\x0ebranch_timeout\x18\b \x01(\x05R\rbranchTimeoutB3Z1github.com/go-lynx/lynx/plugins/dtm/dtm/conf;confb\x06proto3"

var (
	file_dtm_proto_rawDescOnce sync.Once
	file_dtm_proto_rawDescData []byte
)

func file_dtm_proto_rawDescGZIP() []byte {
	file_dtm_proto_rawDescOnce.Do(func() {
		file_dtm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dtm_proto_rawDesc), len(file_dtm_proto_rawDesc)))
	})
	return file_dtm_proto_rawDescData
}

var file_dtm_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_dtm_proto_goTypes = []any{
	(*DTM)(nil), // 0: lynx.protobuf.plugin.dtm.DTM
}
var file_dtm_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dtm_proto_init() }
func file_dtm_proto_init() {
	if File_dtm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dtm_proto_rawDesc), len(file_dtm_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dtm_proto_goTypes,
		DependencyIndexes: file_dtm_proto_depIdxs,
		MessageInfos:      file_dtm_proto_msgTypes,
	}.Build()
	File_dtm_proto = out.File
	file_dtm_proto_goTypes = nil
	file_dtm_proto_depIdxs = nil
}
