// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: seata.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Seata 消息定义了 Seata 插件的配置信息。
type Seata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// enabled 表示是否启用 Seata 插件。
	// 设置为 true 时启用插件，设置为 false 时禁用插件。
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// config_file_path 表示 Seata 配置文件的路径。
	// 该路径指向包含 Seata 客户端所需配置信息的文件。
	ConfigFilePath string `protobuf:"bytes,2,opt,name=config_file_path,json=configFilePath,proto3" json:"config_file_path,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Seata) Reset() {
	*x = Seata{}
	mi := &file_seata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Seata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seata) ProtoMessage() {}

func (x *Seata) ProtoReflect() protoreflect.Message {
	mi := &file_seata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seata.ProtoReflect.Descriptor instead.
func (*Seata) Descriptor() ([]byte, []int) {
	return file_seata_proto_rawDescGZIP(), []int{0}
}

func (x *Seata) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Seata) GetConfigFilePath() string {
	if x != nil {
		return x.ConfigFilePath
	}
	return ""
}

var File_seata_proto protoreflect.FileDescriptor

const file_seata_proto_rawDesc = "" +
	"\n" +
	"\vseata.proto\x12\x1alynx.protobuf.plugin.seata\"K\n" +
	"\x05Seata\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12(\n" +
	"\x10config_file_path\x18\x02 \x01(\tR\x0econfigFilePathB4Z2github.com/go-lynx/lynx/plugins/seata/v2/conf;confb\x06proto3"

var (
	file_seata_proto_rawDescOnce sync.Once
	file_seata_proto_rawDescData []byte
)

func file_seata_proto_rawDescGZIP() []byte {
	file_seata_proto_rawDescOnce.Do(func() {
		file_seata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_seata_proto_rawDesc), len(file_seata_proto_rawDesc)))
	})
	return file_seata_proto_rawDescData
}

var file_seata_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_seata_proto_goTypes = []any{
	(*Seata)(nil), // 0: lynx.protobuf.plugin.seata.Seata
}
var file_seata_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_seata_proto_init() }
func file_seata_proto_init() {
	if File_seata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_seata_proto_rawDesc), len(file_seata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_seata_proto_goTypes,
		DependencyIndexes: file_seata_proto_depIdxs,
		MessageInfos:      file_seata_proto_msgTypes,
	}.Build()
	File_seata_proto = out.File
	file_seata_proto_goTypes = nil
	file_seata_proto_depIdxs = nil
}
