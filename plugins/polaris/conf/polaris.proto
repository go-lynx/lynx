syntax = "proto3";

package lynx.protobuf.plugin.polaris;

option go_package = "github.com/go-lynx/lynx/plugins/polaris/conf;conf";

import "google/protobuf/duration.proto";

// Polaris message defines configuration information for Polaris services.
// Polaris is a cloud-native service discovery and governance center. This message is used to configure parameters required for interacting with Polaris.
message Polaris {
  // namespace represents the namespace in Polaris.
  // Namespaces are used to isolate services and configurations of different environments or businesses. Each service and configuration belongs to a specific namespace.
  string namespace = 1;
  
  // token is the authentication token used to access Polaris services.
  // This token is used to verify the identity of the client, ensuring that only authorized clients can access Polaris services and configurations.
  string token = 2;
  
  // weight represents the weight of the service instance.
  // During load balancing, weight affects the proportion of traffic distribution. Higher weight means more traffic may be allocated.
  int32 weight = 4;
  
  // ttl is the Time To Live of the service instance, in seconds.
  // Polaris periodically checks the health status of service instances based on this value. If no heartbeat is received beyond this time, the instance may be marked as unhealthy.
  int32 ttl = 5;
  
  // timeout is the timeout period for interacting with Polaris services.
  // If no response is received within this time after sending a request to Polaris services, the request is considered timed out.
  google.protobuf.Duration timeout = 6;
  
  // config_path is the path to the Polaris SDK configuration file.
  // If empty, default configuration will be used. It is recommended to use a polaris.yaml file for detailed configuration.
  string config_path = 7;
  
  // enable_health_check whether to enable health check.
  // When enabled, it will automatically check the health status of service instances.
  bool enable_health_check = 8;
  
  // health_check_interval health check interval time.
  google.protobuf.Duration health_check_interval = 9;
  
  // enable_metrics whether to enable monitoring metrics.
  // When enabled, it will collect and report various monitoring metrics.
  bool enable_metrics = 10;
  
  // enable_retry whether to enable retry mechanism.
  // When enabled, it will automatically retry when connection fails.
  bool enable_retry = 11;
  
  // max_retry_times maximum number of retries.
  int32 max_retry_times = 12;
  
  // retry_interval retry interval time.
  google.protobuf.Duration retry_interval = 13;
  
  // enable_circuit_breaker whether to enable circuit breaker.
  // When enabled, it will automatically break when services are unavailable.
  bool enable_circuit_breaker = 14;
  
  // circuit_breaker_threshold circuit breaker threshold.
  // When the error rate exceeds this threshold, the circuit breaker is triggered.
  float circuit_breaker_threshold = 15;
  
  // enable_service_watch whether to enable service watching.
  // When enabled, it will monitor service instance changes.
  bool enable_service_watch = 16;
  
  // enable_config_watch whether to enable configuration watching.
  // When enabled, it will monitor configuration changes.
  bool enable_config_watch = 17;
  
  // load_balancer_type load balancer type.
  // Supported: weighted_random, ring_hash, maglev, l5cst
  string load_balancer_type = 18;
  
  // enable_route_rule whether to enable routing rules.
  // When enabled, dynamic routing rules will be applied.
  bool enable_route_rule = 19;
  
  // enable_rate_limit whether to enable rate limiting.
  // When enabled, rate limiting policies will be applied.
  bool enable_rate_limit = 20;
  
  // rate_limit_type rate limiting type.
  // Supported: local, global
  string rate_limit_type = 21;
  
  // enable_graceful_shutdown whether to enable graceful shutdown.
  // When enabled, it will gracefully deregister services during shutdown.
  bool enable_graceful_shutdown = 22;
  
  // shutdown_timeout graceful shutdown timeout.
  google.protobuf.Duration shutdown_timeout = 23;
  
  // enable_logging whether to enable detailed logging.
  // When enabled, it will output detailed debug logs.
  bool enable_logging = 24;
  
  // log_level log level.
  // Supported levels: debug, info, warn, error
  string log_level = 25;
  
  // service_config configuration for remote service configuration loading
  ServiceConfig service_config = 26;
}

// ServiceConfig defines configuration for loading remote service configurations
message ServiceConfig {
  // group is the configuration group name in Polaris
  // If empty, defaults to application name
  string group = 1;
  
  // filename is the configuration file name in Polaris
  // If empty, defaults to application name with .yaml extension
  string filename = 2;
  
  // namespace is the namespace for the configuration
  // If empty, uses the main polaris namespace
  string namespace = 3;
  
  // additional_configs defines additional configuration files to load
  // Each entry specifies a separate configuration file to load
  repeated ConfigFile additional_configs = 4;
}

// ConfigFile defines a single configuration file to load
message ConfigFile {
  // group is the configuration group name
  string group = 1;
  
  // filename is the configuration file name
  string filename = 2;
  
  // namespace is the namespace for this specific configuration
  // If empty, uses the service_config namespace
  string namespace = 3;
}
