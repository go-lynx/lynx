// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: mssql.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines a message type for Microsoft SQL Server configuration.
type Mssql struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The driver name for the Microsoft SQL Server database.
	Driver string `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	// The data source name (DSN) for the Microsoft SQL Server database.
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// The minimum number of connections to maintain in the connection pool.
	MinConn int32 `protobuf:"varint,3,opt,name=min_conn,json=minConn,proto3" json:"min_conn,omitempty"`
	// The maximum number of connections to maintain in the connection pool.
	MaxConn int32 `protobuf:"varint,4,opt,name=max_conn,json=maxConn,proto3" json:"max_conn,omitempty"`
	// The maximum lifetime for a connection in the connection pool.
	MaxLifeTime *durationpb.Duration `protobuf:"bytes,5,opt,name=max_life_time,json=maxLifeTime,proto3" json:"max_life_time,omitempty"`
	// The maximum idle time for a connection in the connection pool.
	MaxIdleTime *durationpb.Duration `protobuf:"bytes,6,opt,name=max_idle_time,json=maxIdleTime,proto3" json:"max_idle_time,omitempty"`
	// The maximum number of idle connections.
	MaxIdleConn int32 `protobuf:"varint,7,opt,name=max_idle_conn,json=maxIdleConn,proto3" json:"max_idle_conn,omitempty"`
	// SQL Server specific configuration
	ServerConfig  *ServerConfig `protobuf:"bytes,8,opt,name=server_config,json=serverConfig,proto3" json:"server_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mssql) Reset() {
	*x = Mssql{}
	mi := &file_mssql_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mssql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mssql) ProtoMessage() {}

func (x *Mssql) ProtoReflect() protoreflect.Message {
	mi := &file_mssql_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mssql.ProtoReflect.Descriptor instead.
func (*Mssql) Descriptor() ([]byte, []int) {
	return file_mssql_proto_rawDescGZIP(), []int{0}
}

func (x *Mssql) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Mssql) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Mssql) GetMinConn() int32 {
	if x != nil {
		return x.MinConn
	}
	return 0
}

func (x *Mssql) GetMaxConn() int32 {
	if x != nil {
		return x.MaxConn
	}
	return 0
}

func (x *Mssql) GetMaxLifeTime() *durationpb.Duration {
	if x != nil {
		return x.MaxLifeTime
	}
	return nil
}

func (x *Mssql) GetMaxIdleTime() *durationpb.Duration {
	if x != nil {
		return x.MaxIdleTime
	}
	return nil
}

func (x *Mssql) GetMaxIdleConn() int32 {
	if x != nil {
		return x.MaxIdleConn
	}
	return 0
}

func (x *Mssql) GetServerConfig() *ServerConfig {
	if x != nil {
		return x.ServerConfig
	}
	return nil
}

// SQL Server specific configuration options
type ServerConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SQL Server instance name
	InstanceName string `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	// SQL Server port (default: 1433)
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	// Database name
	Database string `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	// Username for authentication
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	// Password for authentication
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	// Enable encryption (default: true for Azure, false for on-premise)
	Encrypt bool `protobuf:"varint,6,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	// Trust server certificate (default: false)
	TrustServerCertificate bool `protobuf:"varint,7,opt,name=trust_server_certificate,json=trustServerCertificate,proto3" json:"trust_server_certificate,omitempty"`
	// Connection timeout in seconds
	ConnectionTimeout int32 `protobuf:"varint,8,opt,name=connection_timeout,json=connectionTimeout,proto3" json:"connection_timeout,omitempty"`
	// Command timeout in seconds
	CommandTimeout int32 `protobuf:"varint,9,opt,name=command_timeout,json=commandTimeout,proto3" json:"command_timeout,omitempty"`
	// Application name for connection identification
	ApplicationName string `protobuf:"bytes,10,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	// Workstation ID for connection identification
	WorkstationId string `protobuf:"bytes,11,opt,name=workstation_id,json=workstationId,proto3" json:"workstation_id,omitempty"`
	// Enable connection pooling (default: true)
	ConnectionPooling bool `protobuf:"varint,12,opt,name=connection_pooling,json=connectionPooling,proto3" json:"connection_pooling,omitempty"`
	// Maximum pool size
	MaxPoolSize int32 `protobuf:"varint,13,opt,name=max_pool_size,json=maxPoolSize,proto3" json:"max_pool_size,omitempty"`
	// Minimum pool size
	MinPoolSize int32 `protobuf:"varint,14,opt,name=min_pool_size,json=minPoolSize,proto3" json:"min_pool_size,omitempty"`
	// Pool blocking timeout in seconds
	PoolBlockingTimeout int32 `protobuf:"varint,15,opt,name=pool_blocking_timeout,json=poolBlockingTimeout,proto3" json:"pool_blocking_timeout,omitempty"`
	// Pool lifetime timeout in seconds
	PoolLifetimeTimeout int32 `protobuf:"varint,16,opt,name=pool_lifetime_timeout,json=poolLifetimeTimeout,proto3" json:"pool_lifetime_timeout,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ServerConfig) Reset() {
	*x = ServerConfig{}
	mi := &file_mssql_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConfig) ProtoMessage() {}

func (x *ServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mssql_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConfig.ProtoReflect.Descriptor instead.
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return file_mssql_proto_rawDescGZIP(), []int{1}
}

func (x *ServerConfig) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *ServerConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServerConfig) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ServerConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ServerConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ServerConfig) GetEncrypt() bool {
	if x != nil {
		return x.Encrypt
	}
	return false
}

func (x *ServerConfig) GetTrustServerCertificate() bool {
	if x != nil {
		return x.TrustServerCertificate
	}
	return false
}

func (x *ServerConfig) GetConnectionTimeout() int32 {
	if x != nil {
		return x.ConnectionTimeout
	}
	return 0
}

func (x *ServerConfig) GetCommandTimeout() int32 {
	if x != nil {
		return x.CommandTimeout
	}
	return 0
}

func (x *ServerConfig) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *ServerConfig) GetWorkstationId() string {
	if x != nil {
		return x.WorkstationId
	}
	return ""
}

func (x *ServerConfig) GetConnectionPooling() bool {
	if x != nil {
		return x.ConnectionPooling
	}
	return false
}

func (x *ServerConfig) GetMaxPoolSize() int32 {
	if x != nil {
		return x.MaxPoolSize
	}
	return 0
}

func (x *ServerConfig) GetMinPoolSize() int32 {
	if x != nil {
		return x.MinPoolSize
	}
	return 0
}

func (x *ServerConfig) GetPoolBlockingTimeout() int32 {
	if x != nil {
		return x.PoolBlockingTimeout
	}
	return 0
}

func (x *ServerConfig) GetPoolLifetimeTimeout() int32 {
	if x != nil {
		return x.PoolLifetimeTimeout
	}
	return 0
}

var File_mssql_proto protoreflect.FileDescriptor

const file_mssql_proto_rawDesc = "" +
	"\n" +
	"\vmssql.proto\x12\x17lynx.protobuf.plugin.db\x1a\x1egoogle/protobuf/duration.proto\"\xdb\x02\n" +
	"\x05Mssql\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x19\n" +
	"\bmin_conn\x18\x03 \x01(\x05R\aminConn\x12\x19\n" +
	"\bmax_conn\x18\x04 \x01(\x05R\amaxConn\x12=\n" +
	"\rmax_life_time\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\vmaxLifeTime\x12=\n" +
	"\rmax_idle_time\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\vmaxIdleTime\x12\"\n" +
	"\rmax_idle_conn\x18\a \x01(\x05R\vmaxIdleConn\x12J\n" +
	"\rserver_config\x18\b \x01(\v2%.lynx.protobuf.plugin.db.ServerConfigR\fserverConfig\"\xf8\x04\n" +
	"\fServerConfig\x12#\n" +
	"\rinstance_name\x18\x01 \x01(\tR\finstanceName\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1a\n" +
	"\bdatabase\x18\x03 \x01(\tR\bdatabase\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\x12\x18\n" +
	"\aencrypt\x18\x06 \x01(\bR\aencrypt\x128\n" +
	"\x18trust_server_certificate\x18\a \x01(\bR\x16trustServerCertificate\x12-\n" +
	"\x12connection_timeout\x18\b \x01(\x05R\x11connectionTimeout\x12'\n" +
	"\x0fcommand_timeout\x18\t \x01(\x05R\x0ecommandTimeout\x12)\n" +
	"\x10application_name\x18\n" +
	" \x01(\tR\x0fapplicationName\x12%\n" +
	"\x0eworkstation_id\x18\v \x01(\tR\rworkstationId\x12-\n" +
	"\x12connection_pooling\x18\f \x01(\bR\x11connectionPooling\x12\"\n" +
	"\rmax_pool_size\x18\r \x01(\x05R\vmaxPoolSize\x12\"\n" +
	"\rmin_pool_size\x18\x0e \x01(\x05R\vminPoolSize\x122\n" +
	"\x15pool_blocking_timeout\x18\x0f \x01(\x05R\x13poolBlockingTimeout\x122\n" +
	"\x15pool_lifetime_timeout\x18\x10 \x01(\x05R\x13poolLifetimeTimeoutB5Z3github.com/go-lynx/lynx/plugins/sql/mssql/conf;confb\x06proto3"

var (
	file_mssql_proto_rawDescOnce sync.Once
	file_mssql_proto_rawDescData []byte
)

func file_mssql_proto_rawDescGZIP() []byte {
	file_mssql_proto_rawDescOnce.Do(func() {
		file_mssql_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mssql_proto_rawDesc), len(file_mssql_proto_rawDesc)))
	})
	return file_mssql_proto_rawDescData
}

var file_mssql_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_mssql_proto_goTypes = []any{
	(*Mssql)(nil),               // 0: lynx.protobuf.plugin.db.Mssql
	(*ServerConfig)(nil),        // 1: lynx.protobuf.plugin.db.ServerConfig
	(*durationpb.Duration)(nil), // 2: google.protobuf.Duration
}
var file_mssql_proto_depIdxs = []int32{
	2, // 0: lynx.protobuf.plugin.db.Mssql.max_life_time:type_name -> google.protobuf.Duration
	2, // 1: lynx.protobuf.plugin.db.Mssql.max_idle_time:type_name -> google.protobuf.Duration
	1, // 2: lynx.protobuf.plugin.db.Mssql.server_config:type_name -> lynx.protobuf.plugin.db.ServerConfig
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_mssql_proto_init() }
func file_mssql_proto_init() {
	if File_mssql_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mssql_proto_rawDesc), len(file_mssql_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mssql_proto_goTypes,
		DependencyIndexes: file_mssql_proto_depIdxs,
		MessageInfos:      file_mssql_proto_msgTypes,
	}.Build()
	File_mssql_proto = out.File
	file_mssql_proto_goTypes = nil
	file_mssql_proto_depIdxs = nil
}
