// Specify the syntax version used by this Protocol Buffers file
syntax = "proto3";

// Package name used for generated code
package lynx.protobuf.plugin.redis;

// Set go_package for generated Go code
option go_package = "github.com/go-lynx/lynx/plugins/nosql/redis/conf;conf";

// Import Duration type from google/protobuf/duration.proto
import "google/protobuf/duration.proto";

// Define Redis configuration message type
message redis {
  // —— Basic Connection ——
  // Network type (e.g.: tcp)
  string network = 1;
  // Address list, supports standalone/cluster/sentinel
  repeated string addrs = 2;
  // ACL username
  string username = 3;
  // Password to access Redis
  string password = 4;
  // Database number to use
  int32 db = 5;
  // Client name (visible in Redis CLIENT LIST)
  string client_name = 6;

  // —— Connection Pool and Connection Lifecycle ——
  // Minimum idle connections in connection pool
  int32 min_idle_conns = 7;
  // Maximum idle connections in connection pool
  int32 max_idle_conns = 8;
  // Maximum active connections in connection pool (mapped to go-redis PoolSize)
  int32 max_active_conns = 9;
  // Maximum idle time for connections
  google.protobuf.Duration conn_max_idle_time = 10;
  // Connection idle timeout
  google.protobuf.Duration idle_timeout = 11;
  // Maximum connection lifetime
  google.protobuf.Duration max_conn_age = 12;
  // Wait timeout when all connections are busy (connection pool timeout)
  google.protobuf.Duration pool_timeout = 13;

  // —— Timeout Configuration ——
  // Connection timeout
  google.protobuf.Duration dial_timeout = 14;
  // Read timeout
  google.protobuf.Duration read_timeout = 15;
  // Write timeout
  google.protobuf.Duration write_timeout = 16;

  // —— Retry Configuration ——
  // Maximum number of retries
  int32 max_retries = 17;
  // Minimum retry backoff
  google.protobuf.Duration min_retry_backoff = 18;
  // Maximum retry backoff
  google.protobuf.Duration max_retry_backoff = 19;

  // TLS options
  message TLS {
    // Whether to enable TLS
    bool enabled = 1;
    // Whether to skip certificate verification (for test environment only)
    bool insecure_skip_verify = 2;
  }
  TLS tls = 20;

  // Sentinel mode options
  message Sentinel {
    // Master node name (sentinel monitored master name)
    string master_name = 1;
    // Optional: dedicated sentinel address list; uses addrs when empty
    repeated string addrs = 2;
  }
  Sentinel sentinel = 21;
}
