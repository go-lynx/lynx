// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: mongodb.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MongoDB message defines the configuration information for MongoDB client
type MongoDB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// uri represents the MongoDB connection string
	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	// database specifies the database name
	Database string `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	// username for authentication
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// password for authentication
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// auth_source specifies the authentication database
	AuthSource string `protobuf:"bytes,5,opt,name=auth_source,json=authSource,proto3" json:"auth_source,omitempty"`
	// max_pool_size specifies the maximum connection pool size
	MaxPoolSize uint64 `protobuf:"varint,6,opt,name=max_pool_size,json=maxPoolSize,proto3" json:"max_pool_size,omitempty"`
	// min_pool_size specifies the minimum connection pool size
	MinPoolSize uint64 `protobuf:"varint,7,opt,name=min_pool_size,json=minPoolSize,proto3" json:"min_pool_size,omitempty"`
	// connect_timeout specifies the connection timeout
	ConnectTimeout *durationpb.Duration `protobuf:"bytes,8,opt,name=connect_timeout,json=connectTimeout,proto3" json:"connect_timeout,omitempty"`
	// server_selection_timeout specifies the server selection timeout
	ServerSelectionTimeout *durationpb.Duration `protobuf:"bytes,9,opt,name=server_selection_timeout,json=serverSelectionTimeout,proto3" json:"server_selection_timeout,omitempty"`
	// socket_timeout specifies the socket timeout
	SocketTimeout *durationpb.Duration `protobuf:"bytes,10,opt,name=socket_timeout,json=socketTimeout,proto3" json:"socket_timeout,omitempty"`
	// heartbeat_interval specifies the heartbeat interval
	HeartbeatInterval *durationpb.Duration `protobuf:"bytes,11,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	// enable_metrics enables metrics collection
	EnableMetrics bool `protobuf:"varint,12,opt,name=enable_metrics,json=enableMetrics,proto3" json:"enable_metrics,omitempty"`
	// enable_health_check enables health check
	EnableHealthCheck bool `protobuf:"varint,13,opt,name=enable_health_check,json=enableHealthCheck,proto3" json:"enable_health_check,omitempty"`
	// health_check_interval specifies the health check interval
	HealthCheckInterval *durationpb.Duration `protobuf:"bytes,14,opt,name=health_check_interval,json=healthCheckInterval,proto3" json:"health_check_interval,omitempty"`
	// enable_tls enables TLS encryption
	EnableTls bool `protobuf:"varint,15,opt,name=enable_tls,json=enableTls,proto3" json:"enable_tls,omitempty"`
	// tls_cert_file specifies the TLS certificate file path
	TlsCertFile string `protobuf:"bytes,16,opt,name=tls_cert_file,json=tlsCertFile,proto3" json:"tls_cert_file,omitempty"`
	// tls_key_file specifies the TLS key file path
	TlsKeyFile string `protobuf:"bytes,17,opt,name=tls_key_file,json=tlsKeyFile,proto3" json:"tls_key_file,omitempty"`
	// tls_ca_file specifies the TLS CA file path
	TlsCaFile string `protobuf:"bytes,18,opt,name=tls_ca_file,json=tlsCaFile,proto3" json:"tls_ca_file,omitempty"`
	// enable_compression enables compression
	EnableCompression bool `protobuf:"varint,19,opt,name=enable_compression,json=enableCompression,proto3" json:"enable_compression,omitempty"`
	// compression_level specifies the compression level
	CompressionLevel int32 `protobuf:"varint,20,opt,name=compression_level,json=compressionLevel,proto3" json:"compression_level,omitempty"`
	// enable_retry_writes enables retry writes
	EnableRetryWrites bool `protobuf:"varint,21,opt,name=enable_retry_writes,json=enableRetryWrites,proto3" json:"enable_retry_writes,omitempty"`
	// enable_read_concern enables read concern
	EnableReadConcern bool `protobuf:"varint,22,opt,name=enable_read_concern,json=enableReadConcern,proto3" json:"enable_read_concern,omitempty"`
	// read_concern_level specifies the read concern level
	ReadConcernLevel string `protobuf:"bytes,23,opt,name=read_concern_level,json=readConcernLevel,proto3" json:"read_concern_level,omitempty"`
	// enable_write_concern enables write concern
	EnableWriteConcern bool `protobuf:"varint,24,opt,name=enable_write_concern,json=enableWriteConcern,proto3" json:"enable_write_concern,omitempty"`
	// write_concern_w specifies the write concern acknowledgment number
	WriteConcernW int32 `protobuf:"varint,25,opt,name=write_concern_w,json=writeConcernW,proto3" json:"write_concern_w,omitempty"`
	// write_concern_timeout specifies the write concern timeout
	WriteConcernTimeout *durationpb.Duration `protobuf:"bytes,26,opt,name=write_concern_timeout,json=writeConcernTimeout,proto3" json:"write_concern_timeout,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MongoDB) Reset() {
	*x = MongoDB{}
	mi := &file_mongodb_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoDB) ProtoMessage() {}

func (x *MongoDB) ProtoReflect() protoreflect.Message {
	mi := &file_mongodb_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoDB.ProtoReflect.Descriptor instead.
func (*MongoDB) Descriptor() ([]byte, []int) {
	return file_mongodb_proto_rawDescGZIP(), []int{0}
}

func (x *MongoDB) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *MongoDB) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *MongoDB) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MongoDB) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *MongoDB) GetAuthSource() string {
	if x != nil {
		return x.AuthSource
	}
	return ""
}

func (x *MongoDB) GetMaxPoolSize() uint64 {
	if x != nil {
		return x.MaxPoolSize
	}
	return 0
}

func (x *MongoDB) GetMinPoolSize() uint64 {
	if x != nil {
		return x.MinPoolSize
	}
	return 0
}

func (x *MongoDB) GetConnectTimeout() *durationpb.Duration {
	if x != nil {
		return x.ConnectTimeout
	}
	return nil
}

func (x *MongoDB) GetServerSelectionTimeout() *durationpb.Duration {
	if x != nil {
		return x.ServerSelectionTimeout
	}
	return nil
}

func (x *MongoDB) GetSocketTimeout() *durationpb.Duration {
	if x != nil {
		return x.SocketTimeout
	}
	return nil
}

func (x *MongoDB) GetHeartbeatInterval() *durationpb.Duration {
	if x != nil {
		return x.HeartbeatInterval
	}
	return nil
}

func (x *MongoDB) GetEnableMetrics() bool {
	if x != nil {
		return x.EnableMetrics
	}
	return false
}

func (x *MongoDB) GetEnableHealthCheck() bool {
	if x != nil {
		return x.EnableHealthCheck
	}
	return false
}

func (x *MongoDB) GetHealthCheckInterval() *durationpb.Duration {
	if x != nil {
		return x.HealthCheckInterval
	}
	return nil
}

func (x *MongoDB) GetEnableTls() bool {
	if x != nil {
		return x.EnableTls
	}
	return false
}

func (x *MongoDB) GetTlsCertFile() string {
	if x != nil {
		return x.TlsCertFile
	}
	return ""
}

func (x *MongoDB) GetTlsKeyFile() string {
	if x != nil {
		return x.TlsKeyFile
	}
	return ""
}

func (x *MongoDB) GetTlsCaFile() string {
	if x != nil {
		return x.TlsCaFile
	}
	return ""
}

func (x *MongoDB) GetEnableCompression() bool {
	if x != nil {
		return x.EnableCompression
	}
	return false
}

func (x *MongoDB) GetCompressionLevel() int32 {
	if x != nil {
		return x.CompressionLevel
	}
	return 0
}

func (x *MongoDB) GetEnableRetryWrites() bool {
	if x != nil {
		return x.EnableRetryWrites
	}
	return false
}

func (x *MongoDB) GetEnableReadConcern() bool {
	if x != nil {
		return x.EnableReadConcern
	}
	return false
}

func (x *MongoDB) GetReadConcernLevel() string {
	if x != nil {
		return x.ReadConcernLevel
	}
	return ""
}

func (x *MongoDB) GetEnableWriteConcern() bool {
	if x != nil {
		return x.EnableWriteConcern
	}
	return false
}

func (x *MongoDB) GetWriteConcernW() int32 {
	if x != nil {
		return x.WriteConcernW
	}
	return 0
}

func (x *MongoDB) GetWriteConcernTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteConcernTimeout
	}
	return nil
}

var File_mongodb_proto protoreflect.FileDescriptor

const file_mongodb_proto_rawDesc = "" +
	"\n" +
	"\rmongodb.proto\x12\x1clynx.protobuf.plugin.mongodb\x1a\x1egoogle/protobuf/duration.proto\"\xbb\t\n" +
	"\aMongoDB\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\x12\x1a\n" +
	"\bdatabase\x18\x02 \x01(\tR\bdatabase\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x1f\n" +
	"\vauth_source\x18\x05 \x01(\tR\n" +
	"authSource\x12\"\n" +
	"\rmax_pool_size\x18\x06 \x01(\x04R\vmaxPoolSize\x12\"\n" +
	"\rmin_pool_size\x18\a \x01(\x04R\vminPoolSize\x12B\n" +
	"\x0fconnect_timeout\x18\b \x01(\v2\x19.google.protobuf.DurationR\x0econnectTimeout\x12S\n" +
	"\x18server_selection_timeout\x18\t \x01(\v2\x19.google.protobuf.DurationR\x16serverSelectionTimeout\x12@\n" +
	"\x0esocket_timeout\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\rsocketTimeout\x12H\n" +
	"\x12heartbeat_interval\x18\v \x01(\v2\x19.google.protobuf.DurationR\x11heartbeatInterval\x12%\n" +
	"\x0eenable_metrics\x18\f \x01(\bR\renableMetrics\x12.\n" +
	"\x13enable_health_check\x18\r \x01(\bR\x11enableHealthCheck\x12M\n" +
	"\x15health_check_interval\x18\x0e \x01(\v2\x19.google.protobuf.DurationR\x13healthCheckInterval\x12\x1d\n" +
	"\n" +
	"enable_tls\x18\x0f \x01(\bR\tenableTls\x12\"\n" +
	"\rtls_cert_file\x18\x10 \x01(\tR\vtlsCertFile\x12 \n" +
	"\ftls_key_file\x18\x11 \x01(\tR\n" +
	"tlsKeyFile\x12\x1e\n" +
	"\vtls_ca_file\x18\x12 \x01(\tR\ttlsCaFile\x12-\n" +
	"\x12enable_compression\x18\x13 \x01(\bR\x11enableCompression\x12+\n" +
	"\x11compression_level\x18\x14 \x01(\x05R\x10compressionLevel\x12.\n" +
	"\x13enable_retry_writes\x18\x15 \x01(\bR\x11enableRetryWrites\x12.\n" +
	"\x13enable_read_concern\x18\x16 \x01(\bR\x11enableReadConcern\x12,\n" +
	"\x12read_concern_level\x18\x17 \x01(\tR\x10readConcernLevel\x120\n" +
	"\x14enable_write_concern\x18\x18 \x01(\bR\x12enableWriteConcern\x12&\n" +
	"\x0fwrite_concern_w\x18\x19 \x01(\x05R\rwriteConcernW\x12M\n" +
	"\x15write_concern_timeout\x18\x1a \x01(\v2\x19.google.protobuf.DurationR\x13writeConcernTimeoutB9Z7github.com/go-lynx/lynx/plugins/nosql/mongodb/conf;confb\x06proto3"

var (
	file_mongodb_proto_rawDescOnce sync.Once
	file_mongodb_proto_rawDescData []byte
)

func file_mongodb_proto_rawDescGZIP() []byte {
	file_mongodb_proto_rawDescOnce.Do(func() {
		file_mongodb_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mongodb_proto_rawDesc), len(file_mongodb_proto_rawDesc)))
	})
	return file_mongodb_proto_rawDescData
}

var file_mongodb_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_mongodb_proto_goTypes = []any{
	(*MongoDB)(nil),             // 0: lynx.protobuf.plugin.mongodb.MongoDB
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
}
var file_mongodb_proto_depIdxs = []int32{
	1, // 0: lynx.protobuf.plugin.mongodb.MongoDB.connect_timeout:type_name -> google.protobuf.Duration
	1, // 1: lynx.protobuf.plugin.mongodb.MongoDB.server_selection_timeout:type_name -> google.protobuf.Duration
	1, // 2: lynx.protobuf.plugin.mongodb.MongoDB.socket_timeout:type_name -> google.protobuf.Duration
	1, // 3: lynx.protobuf.plugin.mongodb.MongoDB.heartbeat_interval:type_name -> google.protobuf.Duration
	1, // 4: lynx.protobuf.plugin.mongodb.MongoDB.health_check_interval:type_name -> google.protobuf.Duration
	1, // 5: lynx.protobuf.plugin.mongodb.MongoDB.write_concern_timeout:type_name -> google.protobuf.Duration
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_mongodb_proto_init() }
func file_mongodb_proto_init() {
	if File_mongodb_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mongodb_proto_rawDesc), len(file_mongodb_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mongodb_proto_goTypes,
		DependencyIndexes: file_mongodb_proto_depIdxs,
		MessageInfos:      file_mongodb_proto_msgTypes,
	}.Build()
	File_mongodb_proto = out.File
	file_mongodb_proto_goTypes = nil
	file_mongodb_proto_depIdxs = nil
}
