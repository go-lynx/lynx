syntax = "proto3";

package lynx.protobuf.plugin.tls;

option go_package = "github.com/go-lynx/lynx/app/tls/conf;conf";

import "google/protobuf/duration.proto";

// Tls message defines TLS related configuration information.
message Tls {
  // source_type represents the type of certificate source:
  // "local_file" - load certificates from local files
  // "control_plane" - load certificates from control plane
  // "memory" - load certificates from memory content
  // Default: "control_plane" (for backward compatibility)
  string source_type = 1;
  
  // file_name represents the name of the TLS configuration file, used to specify the storage location of the configuration file.
  // This field is kept for backward compatibility when source_type is "control_plane"
  string file_name = 2;
  
  // group represents the group to which the TLS configuration belongs, which can be used to classify and manage different TLS configurations.
  // This field is kept for backward compatibility when source_type is "control_plane"
  string group = 3;
  
  // local_file configuration for loading certificates from local files
  LocalFileConfig local_file = 4;
  
  // memory configuration for loading certificates from memory content
  MemoryConfig memory = 5;
  
  // common configuration options for TLS
  CommonConfig common = 6;
}

// LocalFileConfig defines configuration for loading certificates from local files
message LocalFileConfig {
  // cert_file represents the path to the X.509 certificate file, usually in PEM format
  string cert_file = 1;
  
  // key_file represents the path to the private key file corresponding to the certificate, usually in PEM format
  string key_file = 2;
  
  // root_ca_file represents the path to the root certificate authority (CA) certificate file, used to verify client or server identity
  string root_ca_file = 3;
  
  // watch_files indicates whether to monitor certificate files for changes and reload automatically
  // Default: false
  bool watch_files = 4;
  
  // reload_interval specifies the interval for checking file changes when watch_files is enabled
  // Default: "5s"
  google.protobuf.Duration reload_interval = 5;
  
  // cert_format specifies the format of certificate files
  // Supported: "pem", "der"
  // Default: "pem"
  string cert_format = 6;
}

// MemoryConfig defines configuration for loading certificates from memory content
message MemoryConfig {
  // cert_data represents the X.509 certificate content in PEM format
  string cert_data = 1;
  
  // key_data represents the private key content in PEM format
  string key_data = 2;
  
  // root_ca_data represents the root CA certificate content in PEM format
  string root_ca_data = 3;
}

// CommonConfig defines common TLS configuration options
message CommonConfig {
  // auth_type specifies the TLS authentication type:
  // 0: No client authentication (default)
  // 1: Request client certificate, but not mandatory
  // 2: Require client certificate
  // 3: Verify client certificate
  // 4: Verify client certificate if provided
  // Default: 0
  int32 auth_type = 1;
  
  // verify_hostname indicates whether to verify the hostname in the certificate
  // Default: true
  bool verify_hostname = 2;
  
  // min_tls_version specifies the minimum TLS version to support
  // Supported: "1.0", "1.1", "1.2", "1.3"
  // Default: "1.2"
  string min_tls_version = 3;
  
  // cipher_suites specifies the cipher suites to use (comma-separated)
  // If empty, default cipher suites will be used
  string cipher_suites = 4;
  
  // session_cache_size specifies the size of the TLS session cache
  // Default: 32
  int32 session_cache_size = 5;
  
  // session_ticket_key specifies the session ticket key for session resumption
  string session_ticket_key = 6;
}

// Cert message defines TLS certificate related information.
// This message is kept for backward compatibility when using control plane source
message Cert {
  // crt represents the path to the X.509 certificate file, usually in PEM format.
  string crt = 1;
  // key represents the path to the private key file corresponding to the certificate, usually in PEM format.
  string key = 2;
  // rootCA represents the path to the root certificate authority (CA) certificate file, used to verify client or server identity.
  string rootCA = 3;
}
