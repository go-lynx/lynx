// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: boot.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Bootstrap 消息表示应用程序的启动配置信息。
type Bootstrap struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// lynx 字段包含 Lynx 框架相关的配置信息。
	Lynx          *Lynx `protobuf:"bytes,1,opt,name=lynx,proto3" json:"lynx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_boot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_boot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_boot_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetLynx() *Lynx {
	if x != nil {
		return x.Lynx
	}
	return nil
}

// Subscriptions 定义应用需要订阅的服务列表
type Subscriptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// grpc 定义需要订阅的 gRPC 服务列表
	Grpc          []*GrpcSubscription `protobuf:"bytes,1,rep,name=grpc,proto3" json:"grpc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subscriptions) Reset() {
	*x = Subscriptions{}
	mi := &file_boot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscriptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscriptions) ProtoMessage() {}

func (x *Subscriptions) ProtoReflect() protoreflect.Message {
	mi := &file_boot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscriptions.ProtoReflect.Descriptor instead.
func (*Subscriptions) Descriptor() ([]byte, []int) {
	return file_boot_proto_rawDescGZIP(), []int{1}
}

func (x *Subscriptions) GetGrpc() []*GrpcSubscription {
	if x != nil {
		return x.Grpc
	}
	return nil
}

// GrpcSubscription 描述一个要订阅的 gRPC 服务
type GrpcSubscription struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// service 要订阅的服务名（服务发现中的注册名）
	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	// required 是否为强依赖，上线前/启动时需要校验可用性
	Required bool `protobuf:"varint,2,opt,name=required,proto3" json:"required,omitempty"`
	// tls 是否启用 TLS
	Tls bool `protobuf:"varint,3,opt,name=tls,proto3" json:"tls,omitempty"`
	// ca_name 根 CA 证书文件名
	CaName string `protobuf:"bytes,4,opt,name=ca_name,json=caName,proto3" json:"ca_name,omitempty"`
	// ca_group 根 CA 证书文件所在文件组
	CaGroup       string `protobuf:"bytes,5,opt,name=ca_group,json=caGroup,proto3" json:"ca_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrpcSubscription) Reset() {
	*x = GrpcSubscription{}
	mi := &file_boot_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrpcSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcSubscription) ProtoMessage() {}

func (x *GrpcSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_boot_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcSubscription.ProtoReflect.Descriptor instead.
func (*GrpcSubscription) Descriptor() ([]byte, []int) {
	return file_boot_proto_rawDescGZIP(), []int{2}
}

func (x *GrpcSubscription) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *GrpcSubscription) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *GrpcSubscription) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *GrpcSubscription) GetCaName() string {
	if x != nil {
		return x.CaName
	}
	return ""
}

func (x *GrpcSubscription) GetCaGroup() string {
	if x != nil {
		return x.CaGroup
	}
	return ""
}

// Lynx 消息封装了 Lynx 框架的应用程序配置。
type Lynx struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// application 字段包含应用程序自身的配置信息。
	Application *Application `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	// subscriptions 字段定义 Lynx 在启动时需要订阅的上游服务
	Subscriptions *Subscriptions `protobuf:"bytes,2,opt,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	// runtime 字段包含运行时相关配置（事件系统等）
	Runtime       *Runtime `protobuf:"bytes,3,opt,name=runtime,proto3" json:"runtime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Lynx) Reset() {
	*x = Lynx{}
	mi := &file_boot_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lynx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lynx) ProtoMessage() {}

func (x *Lynx) ProtoReflect() protoreflect.Message {
	mi := &file_boot_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lynx.ProtoReflect.Descriptor instead.
func (*Lynx) Descriptor() ([]byte, []int) {
	return file_boot_proto_rawDescGZIP(), []int{3}
}

func (x *Lynx) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

func (x *Lynx) GetSubscriptions() *Subscriptions {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *Lynx) GetRuntime() *Runtime {
	if x != nil {
		return x.Runtime
	}
	return nil
}

// Application 消息包含应用程序的基本配置信息。
type Application struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name 字段表示应用程序的名称。
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// version 字段表示应用程序的版本号。
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// close_banner 字段用于控制是否关闭应用程序启动时显示的横幅信息。
	CloseBanner   bool `protobuf:"varint,3,opt,name=close_banner,json=closeBanner,proto3" json:"close_banner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_boot_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_boot_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_boot_proto_rawDescGZIP(), []int{4}
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Application) GetCloseBanner() bool {
	if x != nil {
		return x.CloseBanner
	}
	return false
}

// Runtime 运行时配置
type Runtime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// event 事件系统配置
	Event         *Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Runtime) Reset() {
	*x = Runtime{}
	mi := &file_boot_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Runtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Runtime) ProtoMessage() {}

func (x *Runtime) ProtoReflect() protoreflect.Message {
	mi := &file_boot_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Runtime.ProtoReflect.Descriptor instead.
func (*Runtime) Descriptor() ([]byte, []int) {
	return file_boot_proto_rawDescGZIP(), []int{5}
}

func (x *Runtime) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// Event 事件系统配置
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// queue_size 事件队列大小
	QueueSize int32 `protobuf:"varint,1,opt,name=queue_size,json=queueSize,proto3" json:"queue_size,omitempty"`
	// worker_count 事件分发工作协程数量
	WorkerCount int32 `protobuf:"varint,2,opt,name=worker_count,json=workerCount,proto3" json:"worker_count,omitempty"`
	// listener_queue_size 每个监听器的独立队列大小
	ListenerQueueSize int32 `protobuf:"varint,3,opt,name=listener_queue_size,json=listenerQueueSize,proto3" json:"listener_queue_size,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_boot_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_boot_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_boot_proto_rawDescGZIP(), []int{6}
}

func (x *Event) GetQueueSize() int32 {
	if x != nil {
		return x.QueueSize
	}
	return 0
}

func (x *Event) GetWorkerCount() int32 {
	if x != nil {
		return x.WorkerCount
	}
	return 0
}

func (x *Event) GetListenerQueueSize() int32 {
	if x != nil {
		return x.ListenerQueueSize
	}
	return 0
}

var File_boot_proto protoreflect.FileDescriptor

const file_boot_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"boot.proto\x12\x16lynx.protobuf.app.conf\"=\n" +
	"\tBootstrap\x120\n" +
	"\x04lynx\x18\x01 \x01(\v2\x1c.lynx.protobuf.app.conf.LynxR\x04lynx\"M\n" +
	"\rSubscriptions\x12<\n" +
	"\x04grpc\x18\x01 \x03(\v2(.lynx.protobuf.app.conf.GrpcSubscriptionR\x04grpc\"\x8e\x01\n" +
	"\x10GrpcSubscription\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x1a\n" +
	"\brequired\x18\x02 \x01(\bR\brequired\x12\x10\n" +
	"\x03tls\x18\x03 \x01(\bR\x03tls\x12\x17\n" +
	"\aca_name\x18\x04 \x01(\tR\x06caName\x12\x19\n" +
	"\bca_group\x18\x05 \x01(\tR\acaGroup\"\xd5\x01\n" +
	"\x04Lynx\x12E\n" +
	"\vapplication\x18\x01 \x01(\v2#.lynx.protobuf.app.conf.ApplicationR\vapplication\x12K\n" +
	"\rsubscriptions\x18\x02 \x01(\v2%.lynx.protobuf.app.conf.SubscriptionsR\rsubscriptions\x129\n" +
	"\aruntime\x18\x03 \x01(\v2\x1f.lynx.protobuf.app.conf.RuntimeR\aruntime\"^\n" +
	"\vApplication\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12!\n" +
	"\fclose_banner\x18\x03 \x01(\bR\vcloseBanner\">\n" +
	"\aRuntime\x123\n" +
	"\x05event\x18\x01 \x01(\v2\x1d.lynx.protobuf.app.conf.EventR\x05event\"y\n" +
	"\x05Event\x12\x1d\n" +
	"\n" +
	"queue_size\x18\x01 \x01(\x05R\tqueueSize\x12!\n" +
	"\fworker_count\x18\x02 \x01(\x05R\vworkerCount\x12.\n" +
	"\x13listener_queue_size\x18\x03 \x01(\x05R\x11listenerQueueSizeB\x1eZ\x1cgithub.com/go-lynx/lynx/confb\x06proto3"

var (
	file_boot_proto_rawDescOnce sync.Once
	file_boot_proto_rawDescData []byte
)

func file_boot_proto_rawDescGZIP() []byte {
	file_boot_proto_rawDescOnce.Do(func() {
		file_boot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_boot_proto_rawDesc), len(file_boot_proto_rawDesc)))
	})
	return file_boot_proto_rawDescData
}

var file_boot_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_boot_proto_goTypes = []any{
	(*Bootstrap)(nil),        // 0: lynx.protobuf.app.conf.Bootstrap
	(*Subscriptions)(nil),    // 1: lynx.protobuf.app.conf.Subscriptions
	(*GrpcSubscription)(nil), // 2: lynx.protobuf.app.conf.GrpcSubscription
	(*Lynx)(nil),             // 3: lynx.protobuf.app.conf.Lynx
	(*Application)(nil),      // 4: lynx.protobuf.app.conf.Application
	(*Runtime)(nil),          // 5: lynx.protobuf.app.conf.Runtime
	(*Event)(nil),            // 6: lynx.protobuf.app.conf.Event
}
var file_boot_proto_depIdxs = []int32{
	3, // 0: lynx.protobuf.app.conf.Bootstrap.lynx:type_name -> lynx.protobuf.app.conf.Lynx
	2, // 1: lynx.protobuf.app.conf.Subscriptions.grpc:type_name -> lynx.protobuf.app.conf.GrpcSubscription
	4, // 2: lynx.protobuf.app.conf.Lynx.application:type_name -> lynx.protobuf.app.conf.Application
	1, // 3: lynx.protobuf.app.conf.Lynx.subscriptions:type_name -> lynx.protobuf.app.conf.Subscriptions
	5, // 4: lynx.protobuf.app.conf.Lynx.runtime:type_name -> lynx.protobuf.app.conf.Runtime
	6, // 5: lynx.protobuf.app.conf.Runtime.event:type_name -> lynx.protobuf.app.conf.Event
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_boot_proto_init() }
func file_boot_proto_init() {
	if File_boot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_boot_proto_rawDesc), len(file_boot_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_boot_proto_goTypes,
		DependencyIndexes: file_boot_proto_depIdxs,
		MessageInfos:      file_boot_proto_msgTypes,
	}.Build()
	File_boot_proto = out.File
	file_boot_proto_goTypes = nil
	file_boot_proto_depIdxs = nil
}
